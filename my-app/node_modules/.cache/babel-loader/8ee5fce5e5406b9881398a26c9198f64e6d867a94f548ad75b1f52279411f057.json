{"ast":null,"code":"var xtend = require('xtend');\nvar supports = require('level-supports');\nvar Buffer = require('buffer').Buffer;\nvar AbstractIterator = require('./abstract-iterator');\nvar AbstractChainedBatch = require('./abstract-chained-batch');\nvar nextTick = require('./next-tick');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar rangeOptions = 'start end gt gte lt lte'.split(' ');\nfunction AbstractLevelDOWN(manifest) {\n  this.status = 'new';\n\n  // TODO (next major): make this mandatory\n  this.supports = supports(manifest, {\n    status: true\n  });\n}\nAbstractLevelDOWN.prototype.open = function (options, callback) {\n  var self = this;\n  var oldStatus = this.status;\n  if (typeof options === 'function') callback = options;\n  if (typeof callback !== 'function') {\n    throw new Error('open() requires a callback argument');\n  }\n  if (typeof options !== 'object' || options === null) options = {};\n  options.createIfMissing = options.createIfMissing !== false;\n  options.errorIfExists = !!options.errorIfExists;\n  this.status = 'opening';\n  this._open(options, function (err) {\n    if (err) {\n      self.status = oldStatus;\n      return callback(err);\n    }\n    self.status = 'open';\n    callback();\n  });\n};\nAbstractLevelDOWN.prototype._open = function (options, callback) {\n  nextTick(callback);\n};\nAbstractLevelDOWN.prototype.close = function (callback) {\n  var self = this;\n  var oldStatus = this.status;\n  if (typeof callback !== 'function') {\n    throw new Error('close() requires a callback argument');\n  }\n  this.status = 'closing';\n  this._close(function (err) {\n    if (err) {\n      self.status = oldStatus;\n      return callback(err);\n    }\n    self.status = 'closed';\n    callback();\n  });\n};\nAbstractLevelDOWN.prototype._close = function (callback) {\n  nextTick(callback);\n};\nAbstractLevelDOWN.prototype.get = function (key, options, callback) {\n  if (typeof options === 'function') callback = options;\n  if (typeof callback !== 'function') {\n    throw new Error('get() requires a callback argument');\n  }\n  var err = this._checkKey(key);\n  if (err) return nextTick(callback, err);\n  key = this._serializeKey(key);\n  if (typeof options !== 'object' || options === null) options = {};\n  options.asBuffer = options.asBuffer !== false;\n  this._get(key, options, callback);\n};\nAbstractLevelDOWN.prototype._get = function (key, options, callback) {\n  nextTick(function () {\n    callback(new Error('NotFound'));\n  });\n};\nAbstractLevelDOWN.prototype.put = function (key, value, options, callback) {\n  if (typeof options === 'function') callback = options;\n  if (typeof callback !== 'function') {\n    throw new Error('put() requires a callback argument');\n  }\n  var err = this._checkKey(key) || this._checkValue(value);\n  if (err) return nextTick(callback, err);\n  key = this._serializeKey(key);\n  value = this._serializeValue(value);\n  if (typeof options !== 'object' || options === null) options = {};\n  this._put(key, value, options, callback);\n};\nAbstractLevelDOWN.prototype._put = function (key, value, options, callback) {\n  nextTick(callback);\n};\nAbstractLevelDOWN.prototype.del = function (key, options, callback) {\n  if (typeof options === 'function') callback = options;\n  if (typeof callback !== 'function') {\n    throw new Error('del() requires a callback argument');\n  }\n  var err = this._checkKey(key);\n  if (err) return nextTick(callback, err);\n  key = this._serializeKey(key);\n  if (typeof options !== 'object' || options === null) options = {};\n  this._del(key, options, callback);\n};\nAbstractLevelDOWN.prototype._del = function (key, options, callback) {\n  nextTick(callback);\n};\nAbstractLevelDOWN.prototype.batch = function (array, options, callback) {\n  if (!arguments.length) return this._chainedBatch();\n  if (typeof options === 'function') callback = options;\n  if (typeof array === 'function') callback = array;\n  if (typeof callback !== 'function') {\n    throw new Error('batch(array) requires a callback argument');\n  }\n  if (!Array.isArray(array)) {\n    return nextTick(callback, new Error('batch(array) requires an array argument'));\n  }\n  if (array.length === 0) {\n    return nextTick(callback);\n  }\n  if (typeof options !== 'object' || options === null) options = {};\n  var serialized = new Array(array.length);\n  for (var i = 0; i < array.length; i++) {\n    if (typeof array[i] !== 'object' || array[i] === null) {\n      return nextTick(callback, new Error('batch(array) element must be an object and not `null`'));\n    }\n    var e = xtend(array[i]);\n    if (e.type !== 'put' && e.type !== 'del') {\n      return nextTick(callback, new Error(\"`type` must be 'put' or 'del'\"));\n    }\n    var err = this._checkKey(e.key);\n    if (err) return nextTick(callback, err);\n    e.key = this._serializeKey(e.key);\n    if (e.type === 'put') {\n      var valueErr = this._checkValue(e.value);\n      if (valueErr) return nextTick(callback, valueErr);\n      e.value = this._serializeValue(e.value);\n    }\n    serialized[i] = e;\n  }\n  this._batch(serialized, options, callback);\n};\nAbstractLevelDOWN.prototype._batch = function (array, options, callback) {\n  nextTick(callback);\n};\nAbstractLevelDOWN.prototype.clear = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof callback !== 'function') {\n    throw new Error('clear() requires a callback argument');\n  }\n  options = cleanRangeOptions(this, options);\n  options.reverse = !!options.reverse;\n  options.limit = 'limit' in options ? options.limit : -1;\n  this._clear(options, callback);\n};\nAbstractLevelDOWN.prototype._clear = function (options, callback) {\n  // Avoid setupIteratorOptions, would serialize range options a second time.\n  options.keys = true;\n  options.values = false;\n  options.keyAsBuffer = true;\n  options.valueAsBuffer = true;\n  var iterator = this._iterator(options);\n  var emptyOptions = {};\n  var self = this;\n  var next = function (err) {\n    if (err) {\n      return iterator.end(function () {\n        callback(err);\n      });\n    }\n    iterator.next(function (err, key) {\n      if (err) return next(err);\n      if (key === undefined) return iterator.end(callback);\n\n      // This could be optimized by using a batch, but the default _clear\n      // is not meant to be fast. Implementations have more room to optimize\n      // if they override _clear. Note: using _del bypasses key serialization.\n      self._del(key, emptyOptions, next);\n    });\n  };\n  next();\n};\nAbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {\n  options = cleanRangeOptions(this, options);\n  options.reverse = !!options.reverse;\n  options.keys = options.keys !== false;\n  options.values = options.values !== false;\n  options.limit = 'limit' in options ? options.limit : -1;\n  options.keyAsBuffer = options.keyAsBuffer !== false;\n  options.valueAsBuffer = options.valueAsBuffer !== false;\n  return options;\n};\nfunction cleanRangeOptions(db, options) {\n  var result = {};\n  for (var k in options) {\n    if (!hasOwnProperty.call(options, k)) continue;\n    var opt = options[k];\n    if (isRangeOption(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      opt = db._serializeKey(opt);\n    }\n    result[k] = opt;\n  }\n  return result;\n}\nfunction isRangeOption(k) {\n  return rangeOptions.indexOf(k) !== -1;\n}\nAbstractLevelDOWN.prototype.iterator = function (options) {\n  if (typeof options !== 'object' || options === null) options = {};\n  options = this._setupIteratorOptions(options);\n  return this._iterator(options);\n};\nAbstractLevelDOWN.prototype._iterator = function (options) {\n  return new AbstractIterator(this);\n};\nAbstractLevelDOWN.prototype._chainedBatch = function () {\n  return new AbstractChainedBatch(this);\n};\nAbstractLevelDOWN.prototype._serializeKey = function (key) {\n  return key;\n};\nAbstractLevelDOWN.prototype._serializeValue = function (value) {\n  return value;\n};\nAbstractLevelDOWN.prototype._checkKey = function (key) {\n  if (key === null || key === undefined) {\n    return new Error('key cannot be `null` or `undefined`');\n  } else if (Buffer.isBuffer(key) && key.length === 0) {\n    return new Error('key cannot be an empty Buffer');\n  } else if (key === '') {\n    return new Error('key cannot be an empty String');\n  } else if (Array.isArray(key) && key.length === 0) {\n    return new Error('key cannot be an empty Array');\n  }\n};\nAbstractLevelDOWN.prototype._checkValue = function (value) {\n  if (value === null || value === undefined) {\n    return new Error('value cannot be `null` or `undefined`');\n  }\n};\n\n// Expose browser-compatible nextTick for dependents\nAbstractLevelDOWN.prototype._nextTick = nextTick;\nmodule.exports = AbstractLevelDOWN;","map":{"version":3,"names":["xtend","require","supports","Buffer","AbstractIterator","AbstractChainedBatch","nextTick","hasOwnProperty","Object","prototype","rangeOptions","split","AbstractLevelDOWN","manifest","status","open","options","callback","self","oldStatus","Error","createIfMissing","errorIfExists","_open","err","close","_close","get","key","_checkKey","_serializeKey","asBuffer","_get","put","value","_checkValue","_serializeValue","_put","del","_del","batch","array","arguments","length","_chainedBatch","Array","isArray","serialized","i","e","type","valueErr","_batch","clear","cleanRangeOptions","reverse","limit","_clear","keys","values","keyAsBuffer","valueAsBuffer","iterator","_iterator","emptyOptions","next","end","undefined","_setupIteratorOptions","db","result","k","call","opt","isRangeOption","indexOf","isBuffer","_nextTick","module","exports"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/abstract-leveldown/abstract-leveldown.js"],"sourcesContent":["var xtend = require('xtend')\nvar supports = require('level-supports')\nvar Buffer = require('buffer').Buffer\nvar AbstractIterator = require('./abstract-iterator')\nvar AbstractChainedBatch = require('./abstract-chained-batch')\nvar nextTick = require('./next-tick')\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar rangeOptions = 'start end gt gte lt lte'.split(' ')\n\nfunction AbstractLevelDOWN (manifest) {\n  this.status = 'new'\n\n  // TODO (next major): make this mandatory\n  this.supports = supports(manifest, {\n    status: true\n  })\n}\n\nAbstractLevelDOWN.prototype.open = function (options, callback) {\n  var self = this\n  var oldStatus = this.status\n\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('open() requires a callback argument')\n  }\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  options.createIfMissing = options.createIfMissing !== false\n  options.errorIfExists = !!options.errorIfExists\n\n  this.status = 'opening'\n  this._open(options, function (err) {\n    if (err) {\n      self.status = oldStatus\n      return callback(err)\n    }\n    self.status = 'open'\n    callback()\n  })\n}\n\nAbstractLevelDOWN.prototype._open = function (options, callback) {\n  nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.close = function (callback) {\n  var self = this\n  var oldStatus = this.status\n\n  if (typeof callback !== 'function') {\n    throw new Error('close() requires a callback argument')\n  }\n\n  this.status = 'closing'\n  this._close(function (err) {\n    if (err) {\n      self.status = oldStatus\n      return callback(err)\n    }\n    self.status = 'closed'\n    callback()\n  })\n}\n\nAbstractLevelDOWN.prototype._close = function (callback) {\n  nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.get = function (key, options, callback) {\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('get() requires a callback argument')\n  }\n\n  var err = this._checkKey(key)\n  if (err) return nextTick(callback, err)\n\n  key = this._serializeKey(key)\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  options.asBuffer = options.asBuffer !== false\n\n  this._get(key, options, callback)\n}\n\nAbstractLevelDOWN.prototype._get = function (key, options, callback) {\n  nextTick(function () { callback(new Error('NotFound')) })\n}\n\nAbstractLevelDOWN.prototype.put = function (key, value, options, callback) {\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('put() requires a callback argument')\n  }\n\n  var err = this._checkKey(key) || this._checkValue(value)\n  if (err) return nextTick(callback, err)\n\n  key = this._serializeKey(key)\n  value = this._serializeValue(value)\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  this._put(key, value, options, callback)\n}\n\nAbstractLevelDOWN.prototype._put = function (key, value, options, callback) {\n  nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.del = function (key, options, callback) {\n  if (typeof options === 'function') callback = options\n\n  if (typeof callback !== 'function') {\n    throw new Error('del() requires a callback argument')\n  }\n\n  var err = this._checkKey(key)\n  if (err) return nextTick(callback, err)\n\n  key = this._serializeKey(key)\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  this._del(key, options, callback)\n}\n\nAbstractLevelDOWN.prototype._del = function (key, options, callback) {\n  nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.batch = function (array, options, callback) {\n  if (!arguments.length) return this._chainedBatch()\n\n  if (typeof options === 'function') callback = options\n\n  if (typeof array === 'function') callback = array\n\n  if (typeof callback !== 'function') {\n    throw new Error('batch(array) requires a callback argument')\n  }\n\n  if (!Array.isArray(array)) {\n    return nextTick(callback, new Error('batch(array) requires an array argument'))\n  }\n\n  if (array.length === 0) {\n    return nextTick(callback)\n  }\n\n  if (typeof options !== 'object' || options === null) options = {}\n\n  var serialized = new Array(array.length)\n\n  for (var i = 0; i < array.length; i++) {\n    if (typeof array[i] !== 'object' || array[i] === null) {\n      return nextTick(callback, new Error('batch(array) element must be an object and not `null`'))\n    }\n\n    var e = xtend(array[i])\n\n    if (e.type !== 'put' && e.type !== 'del') {\n      return nextTick(callback, new Error(\"`type` must be 'put' or 'del'\"))\n    }\n\n    var err = this._checkKey(e.key)\n    if (err) return nextTick(callback, err)\n\n    e.key = this._serializeKey(e.key)\n\n    if (e.type === 'put') {\n      var valueErr = this._checkValue(e.value)\n      if (valueErr) return nextTick(callback, valueErr)\n\n      e.value = this._serializeValue(e.value)\n    }\n\n    serialized[i] = e\n  }\n\n  this._batch(serialized, options, callback)\n}\n\nAbstractLevelDOWN.prototype._batch = function (array, options, callback) {\n  nextTick(callback)\n}\n\nAbstractLevelDOWN.prototype.clear = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n  } else if (typeof callback !== 'function') {\n    throw new Error('clear() requires a callback argument')\n  }\n\n  options = cleanRangeOptions(this, options)\n  options.reverse = !!options.reverse\n  options.limit = 'limit' in options ? options.limit : -1\n\n  this._clear(options, callback)\n}\n\nAbstractLevelDOWN.prototype._clear = function (options, callback) {\n  // Avoid setupIteratorOptions, would serialize range options a second time.\n  options.keys = true\n  options.values = false\n  options.keyAsBuffer = true\n  options.valueAsBuffer = true\n\n  var iterator = this._iterator(options)\n  var emptyOptions = {}\n  var self = this\n\n  var next = function (err) {\n    if (err) {\n      return iterator.end(function () {\n        callback(err)\n      })\n    }\n\n    iterator.next(function (err, key) {\n      if (err) return next(err)\n      if (key === undefined) return iterator.end(callback)\n\n      // This could be optimized by using a batch, but the default _clear\n      // is not meant to be fast. Implementations have more room to optimize\n      // if they override _clear. Note: using _del bypasses key serialization.\n      self._del(key, emptyOptions, next)\n    })\n  }\n\n  next()\n}\n\nAbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {\n  options = cleanRangeOptions(this, options)\n\n  options.reverse = !!options.reverse\n  options.keys = options.keys !== false\n  options.values = options.values !== false\n  options.limit = 'limit' in options ? options.limit : -1\n  options.keyAsBuffer = options.keyAsBuffer !== false\n  options.valueAsBuffer = options.valueAsBuffer !== false\n\n  return options\n}\n\nfunction cleanRangeOptions (db, options) {\n  var result = {}\n\n  for (var k in options) {\n    if (!hasOwnProperty.call(options, k)) continue\n\n    var opt = options[k]\n\n    if (isRangeOption(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      opt = db._serializeKey(opt)\n    }\n\n    result[k] = opt\n  }\n\n  return result\n}\n\nfunction isRangeOption (k) {\n  return rangeOptions.indexOf(k) !== -1\n}\n\nAbstractLevelDOWN.prototype.iterator = function (options) {\n  if (typeof options !== 'object' || options === null) options = {}\n  options = this._setupIteratorOptions(options)\n  return this._iterator(options)\n}\n\nAbstractLevelDOWN.prototype._iterator = function (options) {\n  return new AbstractIterator(this)\n}\n\nAbstractLevelDOWN.prototype._chainedBatch = function () {\n  return new AbstractChainedBatch(this)\n}\n\nAbstractLevelDOWN.prototype._serializeKey = function (key) {\n  return key\n}\n\nAbstractLevelDOWN.prototype._serializeValue = function (value) {\n  return value\n}\n\nAbstractLevelDOWN.prototype._checkKey = function (key) {\n  if (key === null || key === undefined) {\n    return new Error('key cannot be `null` or `undefined`')\n  } else if (Buffer.isBuffer(key) && key.length === 0) {\n    return new Error('key cannot be an empty Buffer')\n  } else if (key === '') {\n    return new Error('key cannot be an empty String')\n  } else if (Array.isArray(key) && key.length === 0) {\n    return new Error('key cannot be an empty Array')\n  }\n}\n\nAbstractLevelDOWN.prototype._checkValue = function (value) {\n  if (value === null || value === undefined) {\n    return new Error('value cannot be `null` or `undefined`')\n  }\n}\n\n// Expose browser-compatible nextTick for dependents\nAbstractLevelDOWN.prototype._nextTick = nextTick\n\nmodule.exports = AbstractLevelDOWN\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}