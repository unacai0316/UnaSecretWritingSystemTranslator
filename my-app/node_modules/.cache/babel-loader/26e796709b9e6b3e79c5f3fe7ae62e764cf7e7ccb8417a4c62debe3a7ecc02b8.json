{"ast":null,"code":"'use strict';\n\nvar level = require('level');\nvar has = require('has');\nvar pump = require('pump');\nvar fs = require('fs');\nvar net = require('net');\nvar path = require('path');\nvar multileveldown = require('multileveldown');\nmodule.exports = function (dir, opts) {\n  if (!opts) opts = {};\n  if (!has(opts, 'retry')) opts.retry = true;\n  var sockPath = process.platform === 'win32' ? '\\\\\\\\.\\\\pipe\\\\level-party\\\\' + path.resolve(dir) : path.join(dir, 'level-party.sock');\n  var client = multileveldown.client(opts);\n  client.open(tryConnect);\n  function tryConnect() {\n    if (!client.isOpen()) return;\n    var socket = net.connect(sockPath);\n    var connected = false;\n    socket.on('connect', function () {\n      connected = true;\n    });\n\n    // we pass socket as the ref option so we dont hang the event loop\n    pump(socket, client.createRpcStream({\n      ref: socket\n    }), socket, function () {\n      if (!client.isOpen()) return;\n      var db = level(dir, opts, onopen);\n      function onopen(err) {\n        if (err) {\n          if (connected) return tryConnect();\n          return setTimeout(tryConnect, 100);\n        }\n        fs.unlink(sockPath, function (err) {\n          if (err && err.code !== 'ENOENT') return db.emit('error', err);\n          if (!client.isOpen()) return;\n          var sockets = [];\n          var server = net.createServer(function (sock) {\n            if (sock.unref) sock.unref();\n            sockets.push(sock);\n            pump(sock, multileveldown.server(db), sock, function () {\n              sockets.splice(sockets.indexOf(sock), 1);\n            });\n          });\n          client.close = shutdown;\n          client.emit('leader');\n          client.forward(db);\n          server.listen(sockPath, onlistening);\n          function shutdown(cb) {\n            sockets.forEach(function (sock) {\n              sock.destroy();\n            });\n            server.close(function () {\n              db.close(cb);\n            });\n          }\n          function onlistening() {\n            if (server.unref) server.unref();\n            if (client.isFlushed()) return;\n            var sock = net.connect(sockPath);\n            pump(sock, client.createRpcStream(), sock);\n            client.once('flush', function () {\n              sock.destroy();\n            });\n          }\n        });\n      }\n    });\n  }\n  ;\n  return client;\n};","map":{"version":3,"names":["level","require","has","pump","fs","net","path","multileveldown","module","exports","dir","opts","retry","sockPath","process","platform","resolve","join","client","open","tryConnect","isOpen","socket","connect","connected","on","createRpcStream","ref","db","onopen","err","setTimeout","unlink","code","emit","sockets","server","createServer","sock","unref","push","splice","indexOf","close","shutdown","forward","listen","onlistening","cb","forEach","destroy","isFlushed","once"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/level-party/index.js"],"sourcesContent":["'use strict'\n\nvar level = require('level')\nvar has = require('has')\nvar pump = require('pump')\nvar fs = require('fs')\nvar net = require('net')\nvar path = require('path')\nvar multileveldown = require('multileveldown')\n\nmodule.exports = function (dir, opts) {\n  if (!opts) opts = {}\n  if (!has(opts, 'retry')) opts.retry = true\n\n  var sockPath = process.platform === 'win32'\n    ? '\\\\\\\\.\\\\pipe\\\\level-party\\\\' + path.resolve(dir)\n    : path.join(dir, 'level-party.sock')\n\n  var client = multileveldown.client(opts)\n\n  client.open(tryConnect)\n\n  function tryConnect () {\n    if (!client.isOpen()) return\n\n    var socket = net.connect(sockPath)\n    var connected = false\n\n    socket.on('connect', function () {\n      connected = true\n    })\n\n    // we pass socket as the ref option so we dont hang the event loop\n    pump(socket, client.createRpcStream({ ref: socket }), socket, function () {\n      if (!client.isOpen()) return\n\n      var db = level(dir, opts, onopen)\n\n      function onopen (err) {\n        if (err) {\n          if (connected) return tryConnect()\n          return setTimeout(tryConnect, 100)\n        }\n\n        fs.unlink(sockPath, function (err) {\n          if (err && err.code !== 'ENOENT') return db.emit('error', err)\n          if (!client.isOpen()) return\n\n          var sockets = []\n          var server = net.createServer(function (sock) {\n            if (sock.unref) sock.unref()\n            sockets.push(sock)\n            pump(sock, multileveldown.server(db), sock, function () {\n              sockets.splice(sockets.indexOf(sock), 1)\n            })\n          })\n\n          client.close = shutdown\n          client.emit('leader')\n          client.forward(db)\n\n          server.listen(sockPath, onlistening)\n\n          function shutdown (cb) {\n            sockets.forEach(function (sock) {\n              sock.destroy()\n            })\n            server.close(function () {\n              db.close(cb)\n            })\n          }\n\n          function onlistening () {\n            if (server.unref) server.unref()\n            if (client.isFlushed()) return\n\n            var sock = net.connect(sockPath)\n            pump(sock, client.createRpcStream(), sock)\n            client.once('flush', function () {\n              sock.destroy()\n            })\n          }\n        })\n      }\n    })\n  };\n\n  return client\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}