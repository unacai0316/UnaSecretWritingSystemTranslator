{"ast":null,"code":"var Buffer = require('buffer').Buffer;\nexports.utf8 = exports['utf-8'] = {\n  encode: function (data) {\n    return isBinary(data) ? data : String(data);\n  },\n  decode: identity,\n  buffer: false,\n  type: 'utf8'\n};\nexports.json = {\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  buffer: false,\n  type: 'json'\n};\nexports.binary = {\n  encode: function (data) {\n    return isBinary(data) ? data : Buffer.from(data);\n  },\n  decode: identity,\n  buffer: true,\n  type: 'binary'\n};\nexports.none = {\n  encode: identity,\n  decode: identity,\n  buffer: false,\n  type: 'id'\n};\nexports.id = exports.none;\nvar bufferEncodings = ['hex', 'ascii', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le'];\nbufferEncodings.forEach(function (type) {\n  exports[type] = {\n    encode: function (data) {\n      return isBinary(data) ? data : Buffer.from(data, type);\n    },\n    decode: function (buffer) {\n      return buffer.toString(type);\n    },\n    buffer: true,\n    type: type\n  };\n});\nfunction identity(value) {\n  return value;\n}\nfunction isBinary(data) {\n  return data === undefined || data === null || Buffer.isBuffer(data);\n}","map":{"version":3,"names":["Buffer","require","exports","utf8","encode","data","isBinary","String","decode","identity","buffer","type","json","JSON","stringify","parse","binary","from","none","id","bufferEncodings","forEach","toString","value","undefined","isBuffer"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/level-codec/lib/encodings.js"],"sourcesContent":["var Buffer = require('buffer').Buffer\n\nexports.utf8 = exports['utf-8'] = {\n  encode: function (data) {\n    return isBinary(data) ? data : String(data)\n  },\n  decode: identity,\n  buffer: false,\n  type: 'utf8'\n}\n\nexports.json = {\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  buffer: false,\n  type: 'json'\n}\n\nexports.binary = {\n  encode: function (data) {\n    return isBinary(data) ? data : Buffer.from(data)\n  },\n  decode: identity,\n  buffer: true,\n  type: 'binary'\n}\n\nexports.none = {\n  encode: identity,\n  decode: identity,\n  buffer: false,\n  type: 'id'\n}\n\nexports.id = exports.none\n\nvar bufferEncodings = [\n  'hex',\n  'ascii',\n  'base64',\n  'ucs2',\n  'ucs-2',\n  'utf16le',\n  'utf-16le'\n]\n\nbufferEncodings.forEach(function (type) {\n  exports[type] = {\n    encode: function (data) {\n      return isBinary(data) ? data : Buffer.from(data, type)\n    },\n    decode: function (buffer) {\n      return buffer.toString(type)\n    },\n    buffer: true,\n    type: type\n  }\n})\n\nfunction identity (value) {\n  return value\n}\n\nfunction isBinary (data) {\n  return data === undefined || data === null || Buffer.isBuffer(data)\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;AAErCE,OAAO,CAACC,IAAI,GAAGD,OAAO,CAAC,OAAO,CAAC,GAAG;EAChCE,MAAM,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACtB,OAAOC,QAAQ,CAACD,IAAI,CAAC,GAAGA,IAAI,GAAGE,MAAM,CAACF,IAAI,CAAC;EAC7C,CAAC;EACDG,MAAM,EAAEC,QAAQ;EAChBC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC;AAEDT,OAAO,CAACU,IAAI,GAAG;EACbR,MAAM,EAAES,IAAI,CAACC,SAAS;EACtBN,MAAM,EAAEK,IAAI,CAACE,KAAK;EAClBL,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC;AAEDT,OAAO,CAACc,MAAM,GAAG;EACfZ,MAAM,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACtB,OAAOC,QAAQ,CAACD,IAAI,CAAC,GAAGA,IAAI,GAAGL,MAAM,CAACiB,IAAI,CAACZ,IAAI,CAAC;EAClD,CAAC;EACDG,MAAM,EAAEC,QAAQ;EAChBC,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE;AACR,CAAC;AAEDT,OAAO,CAACgB,IAAI,GAAG;EACbd,MAAM,EAAEK,QAAQ;EAChBD,MAAM,EAAEC,QAAQ;EAChBC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC;AAEDT,OAAO,CAACiB,EAAE,GAAGjB,OAAO,CAACgB,IAAI;AAEzB,IAAIE,eAAe,GAAG,CACpB,KAAK,EACL,OAAO,EACP,QAAQ,EACR,MAAM,EACN,OAAO,EACP,SAAS,EACT,UAAU,CACX;AAEDA,eAAe,CAACC,OAAO,CAAC,UAAUV,IAAI,EAAE;EACtCT,OAAO,CAACS,IAAI,CAAC,GAAG;IACdP,MAAM,EAAE,SAAAA,CAAUC,IAAI,EAAE;MACtB,OAAOC,QAAQ,CAACD,IAAI,CAAC,GAAGA,IAAI,GAAGL,MAAM,CAACiB,IAAI,CAACZ,IAAI,EAAEM,IAAI,CAAC;IACxD,CAAC;IACDH,MAAM,EAAE,SAAAA,CAAUE,MAAM,EAAE;MACxB,OAAOA,MAAM,CAACY,QAAQ,CAACX,IAAI,CAAC;IAC9B,CAAC;IACDD,MAAM,EAAE,IAAI;IACZC,IAAI,EAAEA;EACR,CAAC;AACH,CAAC,CAAC;AAEF,SAASF,QAAQA,CAAEc,KAAK,EAAE;EACxB,OAAOA,KAAK;AACd;AAEA,SAASjB,QAAQA,CAAED,IAAI,EAAE;EACvB,OAAOA,IAAI,KAAKmB,SAAS,IAAInB,IAAI,KAAK,IAAI,IAAIL,MAAM,CAACyB,QAAQ,CAACpB,IAAI,CAAC;AACrE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}