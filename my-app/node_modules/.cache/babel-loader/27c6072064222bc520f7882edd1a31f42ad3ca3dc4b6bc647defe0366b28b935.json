{"ast":null,"code":"var varint = require('varint');\nvar svarint = require('signed-varint');\nvar b4a = require('b4a');\nexports.make = encoder;\nexports.name = function (enc) {\n  var keys = Object.keys(exports);\n  for (var i = 0; i < keys.length; i++) {\n    if (exports[keys[i]] === enc) return keys[i];\n  }\n  return null;\n};\nexports.skip = function (type, buffer, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset);\n      return offset + varint.decode.bytes;\n    case 1:\n      return offset + 8;\n    case 2:\n      var len = varint.decode(buffer, offset);\n      return offset + varint.decode.bytes + len;\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported');\n    case 5:\n      return offset + 4;\n  }\n  throw new Error('Unknown wire type: ' + type);\n};\nexports.bytes = encoder(2, function encode(val, buffer, offset) {\n  var oldOffset = offset;\n  var len = bufferLength(val);\n  varint.encode(len, buffer, offset);\n  offset += varint.encode.bytes;\n  if (b4a.isBuffer(val)) b4a.copy(val, buffer, offset);else b4a.write(buffer, val, offset, len);\n  offset += len;\n  encode.bytes = offset - oldOffset;\n  return buffer;\n}, function decode(buffer, offset) {\n  var oldOffset = offset;\n  var len = varint.decode(buffer, offset);\n  offset += varint.decode.bytes;\n  var val = buffer.subarray(offset, offset + len);\n  offset += val.length;\n  decode.bytes = offset - oldOffset;\n  return val;\n}, function encodingLength(val) {\n  var len = bufferLength(val);\n  return varint.encodingLength(len) + len;\n});\nexports.string = encoder(2, function encode(val, buffer, offset) {\n  var oldOffset = offset;\n  var len = b4a.byteLength(val);\n  varint.encode(len, buffer, offset, 'utf-8');\n  offset += varint.encode.bytes;\n  b4a.write(buffer, val, offset, len);\n  offset += len;\n  encode.bytes = offset - oldOffset;\n  return buffer;\n}, function decode(buffer, offset) {\n  var oldOffset = offset;\n  var len = varint.decode(buffer, offset);\n  offset += varint.decode.bytes;\n  var val = b4a.toString(buffer, 'utf-8', offset, offset + len);\n  offset += len;\n  decode.bytes = offset - oldOffset;\n  return val;\n}, function encodingLength(val) {\n  var len = b4a.byteLength(val);\n  return varint.encodingLength(len) + len;\n});\nexports.bool = encoder(0, function encode(val, buffer, offset) {\n  buffer[offset] = val ? 1 : 0;\n  encode.bytes = 1;\n  return buffer;\n}, function decode(buffer, offset) {\n  var bool = buffer[offset] > 0;\n  decode.bytes = 1;\n  return bool;\n}, function encodingLength() {\n  return 1;\n});\nexports.int32 = encoder(0, function encode(val, buffer, offset) {\n  varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset);\n  encode.bytes = varint.encode.bytes;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = varint.decode(buffer, offset);\n  decode.bytes = varint.decode.bytes;\n  return val > 2147483647 ? val - 4294967296 : val;\n}, function encodingLength(val) {\n  return varint.encodingLength(val < 0 ? val + 4294967296 : val);\n});\nexports.int64 = encoder(0, function encode(val, buffer, offset) {\n  if (val < 0) {\n    var last = offset + 9;\n    varint.encode(val * -1, buffer, offset);\n    offset += varint.encode.bytes - 1;\n    buffer[offset] = buffer[offset] | 0x80;\n    while (offset < last - 1) {\n      offset++;\n      buffer[offset] = 0xff;\n    }\n    buffer[last] = 0x01;\n    encode.bytes = 10;\n  } else {\n    varint.encode(val, buffer, offset);\n    encode.bytes = varint.encode.bytes;\n  }\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = varint.decode(buffer, offset);\n  if (val >= Math.pow(2, 63)) {\n    var limit = 9;\n    while (buffer[offset + limit - 1] === 0xff) limit--;\n    limit = limit || 9;\n    var subset = b4a.allocUnsafe(limit);\n    b4a.copy(buffer, subset, 0, offset, offset + limit);\n    subset[limit - 1] = subset[limit - 1] & 0x7f;\n    val = -1 * varint.decode(subset, 0);\n    decode.bytes = 10;\n  } else {\n    decode.bytes = varint.decode.bytes;\n  }\n  return val;\n}, function encodingLength(val) {\n  return val < 0 ? 10 : varint.encodingLength(val);\n});\nexports.sint32 = exports.sint64 = encoder(0, svarint.encode, svarint.decode, svarint.encodingLength);\nexports.uint32 = exports.uint64 = exports.enum = exports.varint = encoder(0, varint.encode, varint.decode, varint.encodingLength);\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 = exports.sfixed64 = encoder(1, function encode(val, buffer, offset) {\n  b4a.copy(val, buffer, offset);\n  encode.bytes = 8;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = buffer.subarray(offset, offset + 8);\n  decode.bytes = 8;\n  return val;\n}, function encodingLength() {\n  return 8;\n});\nexports.double = encoder(1, function encode(val, buffer, offset) {\n  b4a.writeDoubleLE(buffer, val, offset);\n  encode.bytes = 8;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = b4a.readDoubleLE(buffer, offset);\n  decode.bytes = 8;\n  return val;\n}, function encodingLength() {\n  return 8;\n});\nexports.fixed32 = encoder(5, function encode(val, buffer, offset) {\n  b4a.writeUInt32LE(buffer, val, offset);\n  encode.bytes = 4;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = b4a.readUInt32LE(buffer, offset);\n  decode.bytes = 4;\n  return val;\n}, function encodingLength() {\n  return 4;\n});\nexports.sfixed32 = encoder(5, function encode(val, buffer, offset) {\n  b4a.writeInt32LE(buffer, val, offset);\n  encode.bytes = 4;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = b4a.readInt32LE(buffer, offset);\n  decode.bytes = 4;\n  return val;\n}, function encodingLength() {\n  return 4;\n});\nexports.float = encoder(5, function encode(val, buffer, offset) {\n  b4a.writeFloatLE(buffer, val, offset);\n  encode.bytes = 4;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = b4a.readFloatLE(buffer, offset);\n  decode.bytes = 4;\n  return val;\n}, function encodingLength() {\n  return 4;\n});\nfunction encoder(type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0;\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n}\nfunction bufferLength(val) {\n  return b4a.isBuffer(val) ? val.length : b4a.byteLength(val);\n}","map":{"version":3,"names":["varint","require","svarint","b4a","exports","make","encoder","name","enc","keys","Object","i","length","skip","type","buffer","offset","decode","bytes","len","Error","encode","val","oldOffset","bufferLength","isBuffer","copy","write","subarray","encodingLength","string","byteLength","toString","bool","int32","int64","last","Math","pow","limit","subset","allocUnsafe","sint32","sint64","uint32","uint64","enum","fixed64","sfixed64","double","writeDoubleLE","readDoubleLE","fixed32","writeUInt32LE","readUInt32LE","sfixed32","writeInt32LE","readInt32LE","float","writeFloatLE","readFloatLE"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/protocol-buffers-encodings/index.js"],"sourcesContent":["var varint = require('varint')\nvar svarint = require('signed-varint')\nvar b4a = require('b4a')\n\nexports.make = encoder\n\nexports.name = function (enc) {\n  var keys = Object.keys(exports)\n  for (var i = 0; i < keys.length; i++) {\n    if (exports[keys[i]] === enc) return keys[i]\n  }\n  return null\n}\n\nexports.skip = function (type, buffer, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset)\n      return offset + varint.decode.bytes\n\n    case 1:\n      return offset + 8\n\n    case 2:\n      var len = varint.decode(buffer, offset)\n      return offset + varint.decode.bytes + len\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported')\n\n    case 5:\n      return offset + 4\n  }\n\n  throw new Error('Unknown wire type: ' + type)\n}\n\nexports.bytes = encoder(2,\n  function encode (val, buffer, offset) {\n    var oldOffset = offset\n    var len = bufferLength(val)\n\n    varint.encode(len, buffer, offset)\n    offset += varint.encode.bytes\n\n    if (b4a.isBuffer(val)) b4a.copy(val, buffer, offset)\n    else b4a.write(buffer, val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.subarray(offset, offset + len)\n    offset += val.length\n\n    decode.bytes = offset - oldOffset\n    return val\n  },\n  function encodingLength (val) {\n    var len = bufferLength(val)\n    return varint.encodingLength(len) + len\n  }\n)\n\nexports.string = encoder(2,\n  function encode (val, buffer, offset) {\n    var oldOffset = offset\n    var len = b4a.byteLength(val)\n\n    varint.encode(len, buffer, offset, 'utf-8')\n    offset += varint.encode.bytes\n\n    b4a.write(buffer, val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = b4a.toString(buffer, 'utf-8', offset, offset + len)\n    offset += len\n\n    decode.bytes = offset - oldOffset\n    return val\n  },\n  function encodingLength (val) {\n    var len = b4a.byteLength(val)\n    return varint.encodingLength(len) + len\n  }\n)\n\nexports.bool = encoder(0,\n  function encode (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0\n    encode.bytes = 1\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var bool = buffer[offset] > 0\n    decode.bytes = 1\n    return bool\n  },\n  function encodingLength () {\n    return 1\n  }\n)\n\nexports.int32 = encoder(0,\n  function encode (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n    encode.bytes = varint.encode.bytes\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    decode.bytes = varint.decode.bytes\n    return val > 2147483647 ? val - 4294967296 : val\n  },\n  function encodingLength (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n  }\n)\n\nexports.int64 = encoder(0,\n  function encode (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9\n      varint.encode(val * -1, buffer, offset)\n      offset += varint.encode.bytes - 1\n      buffer[offset] = buffer[offset] | 0x80\n      while (offset < last - 1) {\n        offset++\n        buffer[offset] = 0xff\n      }\n      buffer[last] = 0x01\n      encode.bytes = 10\n    } else {\n      varint.encode(val, buffer, offset)\n      encode.bytes = varint.encode.bytes\n    }\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9\n      while (buffer[offset + limit - 1] === 0xff) limit--\n      limit = limit || 9\n      var subset = b4a.allocUnsafe(limit)\n      b4a.copy(buffer, subset, 0, offset, offset + limit)\n      subset[limit - 1] = subset[limit - 1] & 0x7f\n      val = -1 * varint.decode(subset, 0)\n      decode.bytes = 10\n    } else {\n      decode.bytes = varint.decode.bytes\n    }\n    return val\n  },\n  function encodingLength (val) {\n    return val < 0 ? 10 : varint.encodingLength(val)\n  }\n)\n\nexports.sint32 =\nexports.sint64 = encoder(0,\n  svarint.encode,\n  svarint.decode,\n  svarint.encodingLength\n)\n\nexports.uint32 =\nexports.uint64 =\nexports.enum =\nexports.varint = encoder(0,\n  varint.encode,\n  varint.decode,\n  varint.encodingLength\n)\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 =\nexports.sfixed64 = encoder(1,\n  function encode (val, buffer, offset) {\n    b4a.copy(val, buffer, offset)\n    encode.bytes = 8\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = buffer.subarray(offset, offset + 8)\n    decode.bytes = 8\n    return val\n  },\n  function encodingLength () {\n    return 8\n  }\n)\n\nexports.double = encoder(1,\n  function encode (val, buffer, offset) {\n    b4a.writeDoubleLE(buffer, val, offset)\n    encode.bytes = 8\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = b4a.readDoubleLE(buffer, offset)\n    decode.bytes = 8\n    return val\n  },\n  function encodingLength () {\n    return 8\n  }\n)\n\nexports.fixed32 = encoder(5,\n  function encode (val, buffer, offset) {\n    b4a.writeUInt32LE(buffer, val, offset)\n    encode.bytes = 4\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = b4a.readUInt32LE(buffer, offset)\n    decode.bytes = 4\n    return val\n  },\n  function encodingLength () {\n    return 4\n  }\n)\n\nexports.sfixed32 = encoder(5,\n  function encode (val, buffer, offset) {\n    b4a.writeInt32LE(buffer, val, offset)\n    encode.bytes = 4\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = b4a.readInt32LE(buffer, offset)\n    decode.bytes = 4\n    return val\n  },\n  function encodingLength () {\n    return 4\n  }\n)\n\nexports.float = encoder(5,\n  function encode (val, buffer, offset) {\n    b4a.writeFloatLE(buffer, val, offset)\n    encode.bytes = 4\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = b4a.readFloatLE(buffer, offset)\n    decode.bytes = 4\n    return val\n  },\n  function encodingLength () {\n    return 4\n  }\n)\n\nfunction encoder (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0\n\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  }\n}\n\nfunction bufferLength (val) {\n  return b4a.isBuffer(val) ? val.length : b4a.byteLength(val)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}