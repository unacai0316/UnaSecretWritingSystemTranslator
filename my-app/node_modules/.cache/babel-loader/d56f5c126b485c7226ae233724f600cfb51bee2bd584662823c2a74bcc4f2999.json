{"ast":null,"code":"'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar ta2str = function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8');\n    return decoder.decode.bind(decoder);\n  } else {\n    return function ta2str(ta) {\n      return ta2buf(ta).toString();\n    };\n  }\n}();\nvar ab2str = function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8');\n    return decoder.decode.bind(decoder);\n  } else {\n    return function ab2str(ab) {\n      return Buffer.from(ab).toString();\n    };\n  }\n}();\nfunction ta2buf(ta) {\n  var buf = Buffer.from(ta.buffer);\n  if (ta.byteLength === ta.buffer.byteLength) {\n    return buf;\n  } else {\n    return buf.slice(ta.byteOffset, ta.byteOffset + ta.byteLength);\n  }\n}\nmodule.exports = function (data, asBuffer) {\n  if (data instanceof Uint8Array) {\n    return asBuffer ? ta2buf(data) : ta2str(data);\n  } else if (data instanceof ArrayBuffer) {\n    return asBuffer ? Buffer.from(data) : ab2str(data);\n  } else {\n    return asBuffer ? Buffer.from(String(data)) : String(data);\n  }\n};","map":{"version":3,"names":["Buffer","require","ta2str","global","TextDecoder","decoder","decode","bind","ta","ta2buf","toString","ab2str","ab","from","buf","buffer","byteLength","slice","byteOffset","module","exports","data","asBuffer","Uint8Array","ArrayBuffer","String"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/level-js/util/deserialize.js"],"sourcesContent":["'use strict'\n\nvar Buffer = require('buffer').Buffer\nvar ta2str = (function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8')\n    return decoder.decode.bind(decoder)\n  } else {\n    return function ta2str (ta) {\n      return ta2buf(ta).toString()\n    }\n  }\n})()\n\nvar ab2str = (function () {\n  if (global.TextDecoder) {\n    var decoder = new TextDecoder('utf-8')\n    return decoder.decode.bind(decoder)\n  } else {\n    return function ab2str (ab) {\n      return Buffer.from(ab).toString()\n    }\n  }\n})()\n\nfunction ta2buf (ta) {\n  var buf = Buffer.from(ta.buffer)\n\n  if (ta.byteLength === ta.buffer.byteLength) {\n    return buf\n  } else {\n    return buf.slice(ta.byteOffset, ta.byteOffset + ta.byteLength)\n  }\n}\n\nmodule.exports = function (data, asBuffer) {\n  if (data instanceof Uint8Array) {\n    return asBuffer ? ta2buf(data) : ta2str(data)\n  } else if (data instanceof ArrayBuffer) {\n    return asBuffer ? Buffer.from(data) : ab2str(data)\n  } else {\n    return asBuffer ? Buffer.from(String(data)) : String(data)\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;AACrC,IAAIE,MAAM,GAAI,YAAY;EACxB,IAAIC,MAAM,CAACC,WAAW,EAAE;IACtB,IAAIC,OAAO,GAAG,IAAID,WAAW,CAAC,OAAO,CAAC;IACtC,OAAOC,OAAO,CAACC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC;EACrC,CAAC,MAAM;IACL,OAAO,SAASH,MAAMA,CAAEM,EAAE,EAAE;MAC1B,OAAOC,MAAM,CAACD,EAAE,CAAC,CAACE,QAAQ,CAAC,CAAC;IAC9B,CAAC;EACH;AACF,CAAC,CAAE,CAAC;AAEJ,IAAIC,MAAM,GAAI,YAAY;EACxB,IAAIR,MAAM,CAACC,WAAW,EAAE;IACtB,IAAIC,OAAO,GAAG,IAAID,WAAW,CAAC,OAAO,CAAC;IACtC,OAAOC,OAAO,CAACC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC;EACrC,CAAC,MAAM;IACL,OAAO,SAASM,MAAMA,CAAEC,EAAE,EAAE;MAC1B,OAAOZ,MAAM,CAACa,IAAI,CAACD,EAAE,CAAC,CAACF,QAAQ,CAAC,CAAC;IACnC,CAAC;EACH;AACF,CAAC,CAAE,CAAC;AAEJ,SAASD,MAAMA,CAAED,EAAE,EAAE;EACnB,IAAIM,GAAG,GAAGd,MAAM,CAACa,IAAI,CAACL,EAAE,CAACO,MAAM,CAAC;EAEhC,IAAIP,EAAE,CAACQ,UAAU,KAAKR,EAAE,CAACO,MAAM,CAACC,UAAU,EAAE;IAC1C,OAAOF,GAAG;EACZ,CAAC,MAAM;IACL,OAAOA,GAAG,CAACG,KAAK,CAACT,EAAE,CAACU,UAAU,EAAEV,EAAE,CAACU,UAAU,GAAGV,EAAE,CAACQ,UAAU,CAAC;EAChE;AACF;AAEAG,MAAM,CAACC,OAAO,GAAG,UAAUC,IAAI,EAAEC,QAAQ,EAAE;EACzC,IAAID,IAAI,YAAYE,UAAU,EAAE;IAC9B,OAAOD,QAAQ,GAAGb,MAAM,CAACY,IAAI,CAAC,GAAGnB,MAAM,CAACmB,IAAI,CAAC;EAC/C,CAAC,MAAM,IAAIA,IAAI,YAAYG,WAAW,EAAE;IACtC,OAAOF,QAAQ,GAAGtB,MAAM,CAACa,IAAI,CAACQ,IAAI,CAAC,GAAGV,MAAM,CAACU,IAAI,CAAC;EACpD,CAAC,MAAM;IACL,OAAOC,QAAQ,GAAGtB,MAAM,CAACa,IAAI,CAACY,MAAM,CAACJ,IAAI,CAAC,CAAC,GAAGI,MAAM,CAACJ,IAAI,CAAC;EAC5D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}