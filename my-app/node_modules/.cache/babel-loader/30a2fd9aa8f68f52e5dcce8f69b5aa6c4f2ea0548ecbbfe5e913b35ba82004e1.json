{"ast":null,"code":"var AbstractIterator = require('abstract-leveldown').AbstractIterator;\nvar inherits = require('inherits');\nfunction DeferredIterator(db, options) {\n  AbstractIterator.call(this, db);\n  this._options = options;\n  this._iterator = null;\n  this._operations = [];\n}\ninherits(DeferredIterator, AbstractIterator);\nDeferredIterator.prototype.setDb = function (db) {\n  var it = this._iterator = db.iterator(this._options);\n  this._operations.forEach(function (op) {\n    it[op.method].apply(it, op.args);\n  });\n};\nDeferredIterator.prototype._operation = function (method, args) {\n  if (this._iterator) return this._iterator[method].apply(this._iterator, args);\n  this._operations.push({\n    method: method,\n    args: args\n  });\n};\n'next end'.split(' ').forEach(function (m) {\n  DeferredIterator.prototype['_' + m] = function () {\n    this._operation(m, arguments);\n  };\n});\n\n// Must defer seek() rather than _seek() because it requires db._serializeKey to be available\nDeferredIterator.prototype.seek = function () {\n  this._operation('seek', arguments);\n};\nmodule.exports = DeferredIterator;","map":{"version":3,"names":["AbstractIterator","require","inherits","DeferredIterator","db","options","call","_options","_iterator","_operations","prototype","setDb","it","iterator","forEach","op","method","apply","args","_operation","push","split","m","arguments","seek","module","exports"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/deferred-leveldown/deferred-iterator.js"],"sourcesContent":["var AbstractIterator = require('abstract-leveldown').AbstractIterator\nvar inherits = require('inherits')\n\nfunction DeferredIterator (db, options) {\n  AbstractIterator.call(this, db)\n\n  this._options = options\n  this._iterator = null\n  this._operations = []\n}\n\ninherits(DeferredIterator, AbstractIterator)\n\nDeferredIterator.prototype.setDb = function (db) {\n  var it = this._iterator = db.iterator(this._options)\n  this._operations.forEach(function (op) {\n    it[op.method].apply(it, op.args)\n  })\n}\n\nDeferredIterator.prototype._operation = function (method, args) {\n  if (this._iterator) return this._iterator[method].apply(this._iterator, args)\n  this._operations.push({ method: method, args: args })\n}\n\n'next end'.split(' ').forEach(function (m) {\n  DeferredIterator.prototype['_' + m] = function () {\n    this._operation(m, arguments)\n  }\n})\n\n// Must defer seek() rather than _seek() because it requires db._serializeKey to be available\nDeferredIterator.prototype.seek = function () {\n  this._operation('seek', arguments)\n}\n\nmodule.exports = DeferredIterator\n"],"mappings":"AAAA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACD,gBAAgB;AACrE,IAAIE,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAElC,SAASE,gBAAgBA,CAAEC,EAAE,EAAEC,OAAO,EAAE;EACtCL,gBAAgB,CAACM,IAAI,CAAC,IAAI,EAAEF,EAAE,CAAC;EAE/B,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACvB,IAAI,CAACG,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,WAAW,GAAG,EAAE;AACvB;AAEAP,QAAQ,CAACC,gBAAgB,EAAEH,gBAAgB,CAAC;AAE5CG,gBAAgB,CAACO,SAAS,CAACC,KAAK,GAAG,UAAUP,EAAE,EAAE;EAC/C,IAAIQ,EAAE,GAAG,IAAI,CAACJ,SAAS,GAAGJ,EAAE,CAACS,QAAQ,CAAC,IAAI,CAACN,QAAQ,CAAC;EACpD,IAAI,CAACE,WAAW,CAACK,OAAO,CAAC,UAAUC,EAAE,EAAE;IACrCH,EAAE,CAACG,EAAE,CAACC,MAAM,CAAC,CAACC,KAAK,CAACL,EAAE,EAAEG,EAAE,CAACG,IAAI,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC;AAEDf,gBAAgB,CAACO,SAAS,CAACS,UAAU,GAAG,UAAUH,MAAM,EAAEE,IAAI,EAAE;EAC9D,IAAI,IAAI,CAACV,SAAS,EAAE,OAAO,IAAI,CAACA,SAAS,CAACQ,MAAM,CAAC,CAACC,KAAK,CAAC,IAAI,CAACT,SAAS,EAAEU,IAAI,CAAC;EAC7E,IAAI,CAACT,WAAW,CAACW,IAAI,CAAC;IAAEJ,MAAM,EAAEA,MAAM;IAAEE,IAAI,EAAEA;EAAK,CAAC,CAAC;AACvD,CAAC;AAED,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAACP,OAAO,CAAC,UAAUQ,CAAC,EAAE;EACzCnB,gBAAgB,CAACO,SAAS,CAAC,GAAG,GAAGY,CAAC,CAAC,GAAG,YAAY;IAChD,IAAI,CAACH,UAAU,CAACG,CAAC,EAAEC,SAAS,CAAC;EAC/B,CAAC;AACH,CAAC,CAAC;;AAEF;AACApB,gBAAgB,CAACO,SAAS,CAACc,IAAI,GAAG,YAAY;EAC5C,IAAI,CAACL,UAAU,CAAC,MAAM,EAAEI,SAAS,CAAC;AACpC,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGvB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}