{"ast":null,"code":"// This file is auto generated by the protocol-buffers compiler\n\n/* eslint-disable quotes */\n/* eslint-disable indent */\n/* eslint-disable no-redeclare */\n/* eslint-disable camelcase */\n\n// Remember to `npm install --save protocol-buffers-encodings`\nvar encodings = require('protocol-buffers-encodings');\nvar varint = encodings.varint;\nvar skip = encodings.skip;\nvar Get = exports.Get = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\nvar Put = exports.Put = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\nvar Delete = exports.Delete = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\nvar Batch = exports.Batch = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\nvar Iterator = exports.Iterator = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\nvar Callback = exports.Callback = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\nvar IteratorData = exports.IteratorData = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n};\ndefineGet();\ndefinePut();\ndefineDelete();\ndefineBatch();\ndefineIterator();\ndefineCallback();\ndefineIteratorData();\nfunction defineGet() {\n  var enc = [encodings.varint, encodings.bytes];\n  Get.encodingLength = encodingLength;\n  Get.encode = encode;\n  Get.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (!defined(obj.key)) throw new Error(\"key is required\");\n    var len = enc[1].encodingLength(obj.key);\n    length += 1 + len;\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (!defined(obj.key)) throw new Error(\"key is required\");\n    buf[offset++] = 18;\n    enc[1].encode(obj.key, buf, offset);\n    offset += enc[1].encode.bytes;\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      key: null\n    };\n    var found0 = false;\n    var found1 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0 || !found1) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          obj.key = enc[1].decode(buf, offset);\n          offset += enc[1].decode.bytes;\n          found1 = true;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction definePut() {\n  var enc = [encodings.varint, encodings.bytes];\n  Put.encodingLength = encodingLength;\n  Put.encode = encode;\n  Put.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (!defined(obj.key)) throw new Error(\"key is required\");\n    var len = enc[1].encodingLength(obj.key);\n    length += 1 + len;\n    if (defined(obj.value)) {\n      var len = enc[1].encodingLength(obj.value);\n      length += 1 + len;\n    }\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (!defined(obj.key)) throw new Error(\"key is required\");\n    buf[offset++] = 18;\n    enc[1].encode(obj.key, buf, offset);\n    offset += enc[1].encode.bytes;\n    if (defined(obj.value)) {\n      buf[offset++] = 26;\n      enc[1].encode(obj.value, buf, offset);\n      offset += enc[1].encode.bytes;\n    }\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      key: null,\n      value: null\n    };\n    var found0 = false;\n    var found1 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0 || !found1) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          obj.key = enc[1].decode(buf, offset);\n          offset += enc[1].decode.bytes;\n          found1 = true;\n          break;\n        case 3:\n          obj.value = enc[1].decode(buf, offset);\n          offset += enc[1].decode.bytes;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction defineDelete() {\n  var enc = [encodings.varint, encodings.bytes];\n  Delete.encodingLength = encodingLength;\n  Delete.encode = encode;\n  Delete.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (!defined(obj.key)) throw new Error(\"key is required\");\n    var len = enc[1].encodingLength(obj.key);\n    length += 1 + len;\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (!defined(obj.key)) throw new Error(\"key is required\");\n    buf[offset++] = 18;\n    enc[1].encode(obj.key, buf, offset);\n    offset += enc[1].encode.bytes;\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      key: null\n    };\n    var found0 = false;\n    var found1 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0 || !found1) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          obj.key = enc[1].decode(buf, offset);\n          offset += enc[1].decode.bytes;\n          found1 = true;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction defineBatch() {\n  var Operation = Batch.Operation = {\n    buffer: true,\n    encodingLength: null,\n    encode: null,\n    decode: null\n  };\n  defineOperation();\n  function defineOperation() {\n    var enc = [encodings.string, encodings.bytes];\n    Operation.encodingLength = encodingLength;\n    Operation.encode = encode;\n    Operation.decode = decode;\n    function encodingLength(obj) {\n      var length = 0;\n      if (!defined(obj.type)) throw new Error(\"type is required\");\n      var len = enc[0].encodingLength(obj.type);\n      length += 1 + len;\n      if (!defined(obj.key)) throw new Error(\"key is required\");\n      var len = enc[1].encodingLength(obj.key);\n      length += 1 + len;\n      if (defined(obj.value)) {\n        var len = enc[1].encodingLength(obj.value);\n        length += 1 + len;\n      }\n      return length;\n    }\n    function encode(obj, buf, offset) {\n      if (!offset) offset = 0;\n      if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n      var oldOffset = offset;\n      if (!defined(obj.type)) throw new Error(\"type is required\");\n      buf[offset++] = 10;\n      enc[0].encode(obj.type, buf, offset);\n      offset += enc[0].encode.bytes;\n      if (!defined(obj.key)) throw new Error(\"key is required\");\n      buf[offset++] = 18;\n      enc[1].encode(obj.key, buf, offset);\n      offset += enc[1].encode.bytes;\n      if (defined(obj.value)) {\n        buf[offset++] = 26;\n        enc[1].encode(obj.value, buf, offset);\n        offset += enc[1].encode.bytes;\n      }\n      encode.bytes = offset - oldOffset;\n      return buf;\n    }\n    function decode(buf, offset, end) {\n      if (!offset) offset = 0;\n      if (!end) end = buf.length;\n      if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n      var oldOffset = offset;\n      var obj = {\n        type: \"\",\n        key: null,\n        value: null\n      };\n      var found0 = false;\n      var found1 = false;\n      while (true) {\n        if (end <= offset) {\n          if (!found0 || !found1) throw new Error(\"Decoded message is not valid\");\n          decode.bytes = offset - oldOffset;\n          return obj;\n        }\n        var prefix = varint.decode(buf, offset);\n        offset += varint.decode.bytes;\n        var tag = prefix >> 3;\n        switch (tag) {\n          case 1:\n            obj.type = enc[0].decode(buf, offset);\n            offset += enc[0].decode.bytes;\n            found0 = true;\n            break;\n          case 2:\n            obj.key = enc[1].decode(buf, offset);\n            offset += enc[1].decode.bytes;\n            found1 = true;\n            break;\n          case 3:\n            obj.value = enc[1].decode(buf, offset);\n            offset += enc[1].decode.bytes;\n            break;\n          default:\n            offset = skip(prefix & 7, buf, offset);\n        }\n      }\n    }\n  }\n  var enc = [encodings.varint, Operation];\n  Batch.encodingLength = encodingLength;\n  Batch.encode = encode;\n  Batch.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (defined(obj.ops)) {\n      for (var i = 0; i < obj.ops.length; i++) {\n        if (!defined(obj.ops[i])) continue;\n        var len = enc[1].encodingLength(obj.ops[i]);\n        length += varint.encodingLength(len);\n        length += 1 + len;\n      }\n    }\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (defined(obj.ops)) {\n      for (var i = 0; i < obj.ops.length; i++) {\n        if (!defined(obj.ops[i])) continue;\n        buf[offset++] = 18;\n        varint.encode(enc[1].encodingLength(obj.ops[i]), buf, offset);\n        offset += varint.encode.bytes;\n        enc[1].encode(obj.ops[i], buf, offset);\n        offset += enc[1].encode.bytes;\n      }\n    }\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      ops: []\n    };\n    var found0 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          var len = varint.decode(buf, offset);\n          offset += varint.decode.bytes;\n          obj.ops.push(enc[1].decode(buf, offset, offset + len));\n          offset += enc[1].decode.bytes;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction defineIterator() {\n  var Options = Iterator.Options = {\n    buffer: true,\n    encodingLength: null,\n    encode: null,\n    decode: null\n  };\n  defineOptions();\n  function defineOptions() {\n    var enc = [encodings.bool, encodings.bytes, encodings.sint64];\n    Options.encodingLength = encodingLength;\n    Options.encode = encode;\n    Options.decode = decode;\n    function encodingLength(obj) {\n      var length = 0;\n      if (defined(obj.keys)) {\n        var len = enc[0].encodingLength(obj.keys);\n        length += 1 + len;\n      }\n      if (defined(obj.values)) {\n        var len = enc[0].encodingLength(obj.values);\n        length += 1 + len;\n      }\n      if (defined(obj.gt)) {\n        var len = enc[1].encodingLength(obj.gt);\n        length += 1 + len;\n      }\n      if (defined(obj.gte)) {\n        var len = enc[1].encodingLength(obj.gte);\n        length += 1 + len;\n      }\n      if (defined(obj.lt)) {\n        var len = enc[1].encodingLength(obj.lt);\n        length += 1 + len;\n      }\n      if (defined(obj.lte)) {\n        var len = enc[1].encodingLength(obj.lte);\n        length += 1 + len;\n      }\n      if (defined(obj.limit)) {\n        var len = enc[2].encodingLength(obj.limit);\n        length += 1 + len;\n      }\n      if (defined(obj.reverse)) {\n        var len = enc[0].encodingLength(obj.reverse);\n        length += 1 + len;\n      }\n      return length;\n    }\n    function encode(obj, buf, offset) {\n      if (!offset) offset = 0;\n      if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n      var oldOffset = offset;\n      if (defined(obj.keys)) {\n        buf[offset++] = 8;\n        enc[0].encode(obj.keys, buf, offset);\n        offset += enc[0].encode.bytes;\n      }\n      if (defined(obj.values)) {\n        buf[offset++] = 16;\n        enc[0].encode(obj.values, buf, offset);\n        offset += enc[0].encode.bytes;\n      }\n      if (defined(obj.gt)) {\n        buf[offset++] = 26;\n        enc[1].encode(obj.gt, buf, offset);\n        offset += enc[1].encode.bytes;\n      }\n      if (defined(obj.gte)) {\n        buf[offset++] = 34;\n        enc[1].encode(obj.gte, buf, offset);\n        offset += enc[1].encode.bytes;\n      }\n      if (defined(obj.lt)) {\n        buf[offset++] = 42;\n        enc[1].encode(obj.lt, buf, offset);\n        offset += enc[1].encode.bytes;\n      }\n      if (defined(obj.lte)) {\n        buf[offset++] = 50;\n        enc[1].encode(obj.lte, buf, offset);\n        offset += enc[1].encode.bytes;\n      }\n      if (defined(obj.limit)) {\n        buf[offset++] = 56;\n        enc[2].encode(obj.limit, buf, offset);\n        offset += enc[2].encode.bytes;\n      }\n      if (defined(obj.reverse)) {\n        buf[offset++] = 64;\n        enc[0].encode(obj.reverse, buf, offset);\n        offset += enc[0].encode.bytes;\n      }\n      encode.bytes = offset - oldOffset;\n      return buf;\n    }\n    function decode(buf, offset, end) {\n      if (!offset) offset = 0;\n      if (!end) end = buf.length;\n      if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n      var oldOffset = offset;\n      var obj = {\n        keys: false,\n        values: false,\n        gt: null,\n        gte: null,\n        lt: null,\n        lte: null,\n        limit: 0,\n        reverse: false\n      };\n      while (true) {\n        if (end <= offset) {\n          decode.bytes = offset - oldOffset;\n          return obj;\n        }\n        var prefix = varint.decode(buf, offset);\n        offset += varint.decode.bytes;\n        var tag = prefix >> 3;\n        switch (tag) {\n          case 1:\n            obj.keys = enc[0].decode(buf, offset);\n            offset += enc[0].decode.bytes;\n            break;\n          case 2:\n            obj.values = enc[0].decode(buf, offset);\n            offset += enc[0].decode.bytes;\n            break;\n          case 3:\n            obj.gt = enc[1].decode(buf, offset);\n            offset += enc[1].decode.bytes;\n            break;\n          case 4:\n            obj.gte = enc[1].decode(buf, offset);\n            offset += enc[1].decode.bytes;\n            break;\n          case 5:\n            obj.lt = enc[1].decode(buf, offset);\n            offset += enc[1].decode.bytes;\n            break;\n          case 6:\n            obj.lte = enc[1].decode(buf, offset);\n            offset += enc[1].decode.bytes;\n            break;\n          case 7:\n            obj.limit = enc[2].decode(buf, offset);\n            offset += enc[2].decode.bytes;\n            break;\n          case 8:\n            obj.reverse = enc[0].decode(buf, offset);\n            offset += enc[0].decode.bytes;\n            break;\n          default:\n            offset = skip(prefix & 7, buf, offset);\n        }\n      }\n    }\n  }\n  var enc = [encodings.varint, Options];\n  Iterator.encodingLength = encodingLength;\n  Iterator.encode = encode;\n  Iterator.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (defined(obj.batch)) {\n      var len = enc[0].encodingLength(obj.batch);\n      length += 1 + len;\n    }\n    if (defined(obj.options)) {\n      var len = enc[1].encodingLength(obj.options);\n      length += varint.encodingLength(len);\n      length += 1 + len;\n    }\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (defined(obj.batch)) {\n      buf[offset++] = 16;\n      enc[0].encode(obj.batch, buf, offset);\n      offset += enc[0].encode.bytes;\n    }\n    if (defined(obj.options)) {\n      buf[offset++] = 26;\n      varint.encode(enc[1].encodingLength(obj.options), buf, offset);\n      offset += varint.encode.bytes;\n      enc[1].encode(obj.options, buf, offset);\n      offset += enc[1].encode.bytes;\n    }\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      batch: 0,\n      options: null\n    };\n    var found0 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          obj.batch = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          break;\n        case 3:\n          var len = varint.decode(buf, offset);\n          offset += varint.decode.bytes;\n          obj.options = enc[1].decode(buf, offset, offset + len);\n          offset += enc[1].decode.bytes;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction defineCallback() {\n  var enc = [encodings.varint, encodings.string, encodings.bytes];\n  Callback.encodingLength = encodingLength;\n  Callback.encode = encode;\n  Callback.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (defined(obj.error)) {\n      var len = enc[1].encodingLength(obj.error);\n      length += 1 + len;\n    }\n    if (defined(obj.value)) {\n      var len = enc[2].encodingLength(obj.value);\n      length += 1 + len;\n    }\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (defined(obj.error)) {\n      buf[offset++] = 18;\n      enc[1].encode(obj.error, buf, offset);\n      offset += enc[1].encode.bytes;\n    }\n    if (defined(obj.value)) {\n      buf[offset++] = 26;\n      enc[2].encode(obj.value, buf, offset);\n      offset += enc[2].encode.bytes;\n    }\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      error: \"\",\n      value: null\n    };\n    var found0 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          obj.error = enc[1].decode(buf, offset);\n          offset += enc[1].decode.bytes;\n          break;\n        case 3:\n          obj.value = enc[2].decode(buf, offset);\n          offset += enc[2].decode.bytes;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction defineIteratorData() {\n  var enc = [encodings.varint, encodings.string, encodings.bytes];\n  IteratorData.encodingLength = encodingLength;\n  IteratorData.encode = encode;\n  IteratorData.decode = decode;\n  function encodingLength(obj) {\n    var length = 0;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    var len = enc[0].encodingLength(obj.id);\n    length += 1 + len;\n    if (defined(obj.error)) {\n      var len = enc[1].encodingLength(obj.error);\n      length += 1 + len;\n    }\n    if (defined(obj.key)) {\n      var len = enc[2].encodingLength(obj.key);\n      length += 1 + len;\n    }\n    if (defined(obj.value)) {\n      var len = enc[2].encodingLength(obj.value);\n      length += 1 + len;\n    }\n    return length;\n  }\n  function encode(obj, buf, offset) {\n    if (!offset) offset = 0;\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj));\n    var oldOffset = offset;\n    if (!defined(obj.id)) throw new Error(\"id is required\");\n    buf[offset++] = 8;\n    enc[0].encode(obj.id, buf, offset);\n    offset += enc[0].encode.bytes;\n    if (defined(obj.error)) {\n      buf[offset++] = 18;\n      enc[1].encode(obj.error, buf, offset);\n      offset += enc[1].encode.bytes;\n    }\n    if (defined(obj.key)) {\n      buf[offset++] = 26;\n      enc[2].encode(obj.key, buf, offset);\n      offset += enc[2].encode.bytes;\n    }\n    if (defined(obj.value)) {\n      buf[offset++] = 34;\n      enc[2].encode(obj.value, buf, offset);\n      offset += enc[2].encode.bytes;\n    }\n    encode.bytes = offset - oldOffset;\n    return buf;\n  }\n  function decode(buf, offset, end) {\n    if (!offset) offset = 0;\n    if (!end) end = buf.length;\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\");\n    var oldOffset = offset;\n    var obj = {\n      id: 0,\n      error: \"\",\n      key: null,\n      value: null\n    };\n    var found0 = false;\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\");\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      switch (tag) {\n        case 1:\n          obj.id = enc[0].decode(buf, offset);\n          offset += enc[0].decode.bytes;\n          found0 = true;\n          break;\n        case 2:\n          obj.error = enc[1].decode(buf, offset);\n          offset += enc[1].decode.bytes;\n          break;\n        case 3:\n          obj.key = enc[2].decode(buf, offset);\n          offset += enc[2].decode.bytes;\n          break;\n        case 4:\n          obj.value = enc[2].decode(buf, offset);\n          offset += enc[2].decode.bytes;\n          break;\n        default:\n          offset = skip(prefix & 7, buf, offset);\n      }\n    }\n  }\n}\nfunction defined(val) {\n  return val !== null && val !== undefined && (typeof val !== 'number' || !isNaN(val));\n}","map":{"version":3,"names":["encodings","require","varint","skip","Get","exports","buffer","encodingLength","encode","decode","Put","Delete","Batch","Iterator","Callback","IteratorData","defineGet","definePut","defineDelete","defineBatch","defineIterator","defineCallback","defineIteratorData","enc","bytes","obj","length","defined","id","Error","len","key","buf","offset","Buffer","allocUnsafe","oldOffset","end","found0","found1","prefix","tag","value","Operation","defineOperation","string","type","ops","i","push","Options","defineOptions","bool","sint64","keys","values","gt","gte","lt","lte","limit","reverse","batch","options","error","val","undefined","isNaN"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/multileveldown/messages.js"],"sourcesContent":["// This file is auto generated by the protocol-buffers compiler\n\n/* eslint-disable quotes */\n/* eslint-disable indent */\n/* eslint-disable no-redeclare */\n/* eslint-disable camelcase */\n\n// Remember to `npm install --save protocol-buffers-encodings`\nvar encodings = require('protocol-buffers-encodings')\nvar varint = encodings.varint\nvar skip = encodings.skip\n\nvar Get = exports.Get = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\nvar Put = exports.Put = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\nvar Delete = exports.Delete = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\nvar Batch = exports.Batch = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\nvar Iterator = exports.Iterator = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\nvar Callback = exports.Callback = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\nvar IteratorData = exports.IteratorData = {\n  buffer: true,\n  encodingLength: null,\n  encode: null,\n  decode: null\n}\n\ndefineGet()\ndefinePut()\ndefineDelete()\ndefineBatch()\ndefineIterator()\ndefineCallback()\ndefineIteratorData()\n\nfunction defineGet () {\n  var enc = [\n    encodings.varint,\n    encodings.bytes\n  ]\n\n  Get.encodingLength = encodingLength\n  Get.encode = encode\n  Get.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (!defined(obj.key)) throw new Error(\"key is required\")\n    var len = enc[1].encodingLength(obj.key)\n    length += 1 + len\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (!defined(obj.key)) throw new Error(\"key is required\")\n    buf[offset++] = 18\n    enc[1].encode(obj.key, buf, offset)\n    offset += enc[1].encode.bytes\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      key: null\n    }\n    var found0 = false\n    var found1 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0 || !found1) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.key = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        found1 = true\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction definePut () {\n  var enc = [\n    encodings.varint,\n    encodings.bytes\n  ]\n\n  Put.encodingLength = encodingLength\n  Put.encode = encode\n  Put.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (!defined(obj.key)) throw new Error(\"key is required\")\n    var len = enc[1].encodingLength(obj.key)\n    length += 1 + len\n    if (defined(obj.value)) {\n      var len = enc[1].encodingLength(obj.value)\n      length += 1 + len\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (!defined(obj.key)) throw new Error(\"key is required\")\n    buf[offset++] = 18\n    enc[1].encode(obj.key, buf, offset)\n    offset += enc[1].encode.bytes\n    if (defined(obj.value)) {\n      buf[offset++] = 26\n      enc[1].encode(obj.value, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      key: null,\n      value: null\n    }\n    var found0 = false\n    var found1 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0 || !found1) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.key = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        found1 = true\n        break\n        case 3:\n        obj.value = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defineDelete () {\n  var enc = [\n    encodings.varint,\n    encodings.bytes\n  ]\n\n  Delete.encodingLength = encodingLength\n  Delete.encode = encode\n  Delete.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (!defined(obj.key)) throw new Error(\"key is required\")\n    var len = enc[1].encodingLength(obj.key)\n    length += 1 + len\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (!defined(obj.key)) throw new Error(\"key is required\")\n    buf[offset++] = 18\n    enc[1].encode(obj.key, buf, offset)\n    offset += enc[1].encode.bytes\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      key: null\n    }\n    var found0 = false\n    var found1 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0 || !found1) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.key = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        found1 = true\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defineBatch () {\n  var Operation = Batch.Operation = {\n    buffer: true,\n    encodingLength: null,\n    encode: null,\n    decode: null\n  }\n\n  defineOperation()\n\n  function defineOperation () {\n    var enc = [\n      encodings.string,\n      encodings.bytes\n    ]\n\n    Operation.encodingLength = encodingLength\n    Operation.encode = encode\n    Operation.decode = decode\n\n    function encodingLength (obj) {\n      var length = 0\n      if (!defined(obj.type)) throw new Error(\"type is required\")\n      var len = enc[0].encodingLength(obj.type)\n      length += 1 + len\n      if (!defined(obj.key)) throw new Error(\"key is required\")\n      var len = enc[1].encodingLength(obj.key)\n      length += 1 + len\n      if (defined(obj.value)) {\n        var len = enc[1].encodingLength(obj.value)\n        length += 1 + len\n      }\n      return length\n    }\n\n    function encode (obj, buf, offset) {\n      if (!offset) offset = 0\n      if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n      var oldOffset = offset\n      if (!defined(obj.type)) throw new Error(\"type is required\")\n      buf[offset++] = 10\n      enc[0].encode(obj.type, buf, offset)\n      offset += enc[0].encode.bytes\n      if (!defined(obj.key)) throw new Error(\"key is required\")\n      buf[offset++] = 18\n      enc[1].encode(obj.key, buf, offset)\n      offset += enc[1].encode.bytes\n      if (defined(obj.value)) {\n        buf[offset++] = 26\n        enc[1].encode(obj.value, buf, offset)\n        offset += enc[1].encode.bytes\n      }\n      encode.bytes = offset - oldOffset\n      return buf\n    }\n\n    function decode (buf, offset, end) {\n      if (!offset) offset = 0\n      if (!end) end = buf.length\n      if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n      var oldOffset = offset\n      var obj = {\n        type: \"\",\n        key: null,\n        value: null\n      }\n      var found0 = false\n      var found1 = false\n      while (true) {\n        if (end <= offset) {\n          if (!found0 || !found1) throw new Error(\"Decoded message is not valid\")\n          decode.bytes = offset - oldOffset\n          return obj\n        }\n        var prefix = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        var tag = prefix >> 3\n        switch (tag) {\n          case 1:\n          obj.type = enc[0].decode(buf, offset)\n          offset += enc[0].decode.bytes\n          found0 = true\n          break\n          case 2:\n          obj.key = enc[1].decode(buf, offset)\n          offset += enc[1].decode.bytes\n          found1 = true\n          break\n          case 3:\n          obj.value = enc[1].decode(buf, offset)\n          offset += enc[1].decode.bytes\n          break\n          default:\n          offset = skip(prefix & 7, buf, offset)\n        }\n      }\n    }\n  }\n\n  var enc = [\n    encodings.varint,\n    Operation\n  ]\n\n  Batch.encodingLength = encodingLength\n  Batch.encode = encode\n  Batch.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (defined(obj.ops)) {\n      for (var i = 0; i < obj.ops.length; i++) {\n        if (!defined(obj.ops[i])) continue\n        var len = enc[1].encodingLength(obj.ops[i])\n        length += varint.encodingLength(len)\n        length += 1 + len\n      }\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (defined(obj.ops)) {\n      for (var i = 0; i < obj.ops.length; i++) {\n        if (!defined(obj.ops[i])) continue\n        buf[offset++] = 18\n        varint.encode(enc[1].encodingLength(obj.ops[i]), buf, offset)\n        offset += varint.encode.bytes\n        enc[1].encode(obj.ops[i], buf, offset)\n        offset += enc[1].encode.bytes\n      }\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      ops: []\n    }\n    var found0 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        var len = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        obj.ops.push(enc[1].decode(buf, offset, offset + len))\n        offset += enc[1].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defineIterator () {\n  var Options = Iterator.Options = {\n    buffer: true,\n    encodingLength: null,\n    encode: null,\n    decode: null\n  }\n\n  defineOptions()\n\n  function defineOptions () {\n    var enc = [\n      encodings.bool,\n      encodings.bytes,\n      encodings.sint64\n    ]\n\n    Options.encodingLength = encodingLength\n    Options.encode = encode\n    Options.decode = decode\n\n    function encodingLength (obj) {\n      var length = 0\n      if (defined(obj.keys)) {\n        var len = enc[0].encodingLength(obj.keys)\n        length += 1 + len\n      }\n      if (defined(obj.values)) {\n        var len = enc[0].encodingLength(obj.values)\n        length += 1 + len\n      }\n      if (defined(obj.gt)) {\n        var len = enc[1].encodingLength(obj.gt)\n        length += 1 + len\n      }\n      if (defined(obj.gte)) {\n        var len = enc[1].encodingLength(obj.gte)\n        length += 1 + len\n      }\n      if (defined(obj.lt)) {\n        var len = enc[1].encodingLength(obj.lt)\n        length += 1 + len\n      }\n      if (defined(obj.lte)) {\n        var len = enc[1].encodingLength(obj.lte)\n        length += 1 + len\n      }\n      if (defined(obj.limit)) {\n        var len = enc[2].encodingLength(obj.limit)\n        length += 1 + len\n      }\n      if (defined(obj.reverse)) {\n        var len = enc[0].encodingLength(obj.reverse)\n        length += 1 + len\n      }\n      return length\n    }\n\n    function encode (obj, buf, offset) {\n      if (!offset) offset = 0\n      if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n      var oldOffset = offset\n      if (defined(obj.keys)) {\n        buf[offset++] = 8\n        enc[0].encode(obj.keys, buf, offset)\n        offset += enc[0].encode.bytes\n      }\n      if (defined(obj.values)) {\n        buf[offset++] = 16\n        enc[0].encode(obj.values, buf, offset)\n        offset += enc[0].encode.bytes\n      }\n      if (defined(obj.gt)) {\n        buf[offset++] = 26\n        enc[1].encode(obj.gt, buf, offset)\n        offset += enc[1].encode.bytes\n      }\n      if (defined(obj.gte)) {\n        buf[offset++] = 34\n        enc[1].encode(obj.gte, buf, offset)\n        offset += enc[1].encode.bytes\n      }\n      if (defined(obj.lt)) {\n        buf[offset++] = 42\n        enc[1].encode(obj.lt, buf, offset)\n        offset += enc[1].encode.bytes\n      }\n      if (defined(obj.lte)) {\n        buf[offset++] = 50\n        enc[1].encode(obj.lte, buf, offset)\n        offset += enc[1].encode.bytes\n      }\n      if (defined(obj.limit)) {\n        buf[offset++] = 56\n        enc[2].encode(obj.limit, buf, offset)\n        offset += enc[2].encode.bytes\n      }\n      if (defined(obj.reverse)) {\n        buf[offset++] = 64\n        enc[0].encode(obj.reverse, buf, offset)\n        offset += enc[0].encode.bytes\n      }\n      encode.bytes = offset - oldOffset\n      return buf\n    }\n\n    function decode (buf, offset, end) {\n      if (!offset) offset = 0\n      if (!end) end = buf.length\n      if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n      var oldOffset = offset\n      var obj = {\n        keys: false,\n        values: false,\n        gt: null,\n        gte: null,\n        lt: null,\n        lte: null,\n        limit: 0,\n        reverse: false\n      }\n      while (true) {\n        if (end <= offset) {\n          decode.bytes = offset - oldOffset\n          return obj\n        }\n        var prefix = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        var tag = prefix >> 3\n        switch (tag) {\n          case 1:\n          obj.keys = enc[0].decode(buf, offset)\n          offset += enc[0].decode.bytes\n          break\n          case 2:\n          obj.values = enc[0].decode(buf, offset)\n          offset += enc[0].decode.bytes\n          break\n          case 3:\n          obj.gt = enc[1].decode(buf, offset)\n          offset += enc[1].decode.bytes\n          break\n          case 4:\n          obj.gte = enc[1].decode(buf, offset)\n          offset += enc[1].decode.bytes\n          break\n          case 5:\n          obj.lt = enc[1].decode(buf, offset)\n          offset += enc[1].decode.bytes\n          break\n          case 6:\n          obj.lte = enc[1].decode(buf, offset)\n          offset += enc[1].decode.bytes\n          break\n          case 7:\n          obj.limit = enc[2].decode(buf, offset)\n          offset += enc[2].decode.bytes\n          break\n          case 8:\n          obj.reverse = enc[0].decode(buf, offset)\n          offset += enc[0].decode.bytes\n          break\n          default:\n          offset = skip(prefix & 7, buf, offset)\n        }\n      }\n    }\n  }\n\n  var enc = [\n    encodings.varint,\n    Options\n  ]\n\n  Iterator.encodingLength = encodingLength\n  Iterator.encode = encode\n  Iterator.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (defined(obj.batch)) {\n      var len = enc[0].encodingLength(obj.batch)\n      length += 1 + len\n    }\n    if (defined(obj.options)) {\n      var len = enc[1].encodingLength(obj.options)\n      length += varint.encodingLength(len)\n      length += 1 + len\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (defined(obj.batch)) {\n      buf[offset++] = 16\n      enc[0].encode(obj.batch, buf, offset)\n      offset += enc[0].encode.bytes\n    }\n    if (defined(obj.options)) {\n      buf[offset++] = 26\n      varint.encode(enc[1].encodingLength(obj.options), buf, offset)\n      offset += varint.encode.bytes\n      enc[1].encode(obj.options, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      batch: 0,\n      options: null\n    }\n    var found0 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.batch = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        break\n        case 3:\n        var len = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        obj.options = enc[1].decode(buf, offset, offset + len)\n        offset += enc[1].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defineCallback () {\n  var enc = [\n    encodings.varint,\n    encodings.string,\n    encodings.bytes\n  ]\n\n  Callback.encodingLength = encodingLength\n  Callback.encode = encode\n  Callback.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (defined(obj.error)) {\n      var len = enc[1].encodingLength(obj.error)\n      length += 1 + len\n    }\n    if (defined(obj.value)) {\n      var len = enc[2].encodingLength(obj.value)\n      length += 1 + len\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (defined(obj.error)) {\n      buf[offset++] = 18\n      enc[1].encode(obj.error, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    if (defined(obj.value)) {\n      buf[offset++] = 26\n      enc[2].encode(obj.value, buf, offset)\n      offset += enc[2].encode.bytes\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      error: \"\",\n      value: null\n    }\n    var found0 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.error = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        case 3:\n        obj.value = enc[2].decode(buf, offset)\n        offset += enc[2].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defineIteratorData () {\n  var enc = [\n    encodings.varint,\n    encodings.string,\n    encodings.bytes\n  ]\n\n  IteratorData.encodingLength = encodingLength\n  IteratorData.encode = encode\n  IteratorData.decode = decode\n\n  function encodingLength (obj) {\n    var length = 0\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    var len = enc[0].encodingLength(obj.id)\n    length += 1 + len\n    if (defined(obj.error)) {\n      var len = enc[1].encodingLength(obj.error)\n      length += 1 + len\n    }\n    if (defined(obj.key)) {\n      var len = enc[2].encodingLength(obj.key)\n      length += 1 + len\n    }\n    if (defined(obj.value)) {\n      var len = enc[2].encodingLength(obj.value)\n      length += 1 + len\n    }\n    return length\n  }\n\n  function encode (obj, buf, offset) {\n    if (!offset) offset = 0\n    if (!buf) buf = Buffer.allocUnsafe(encodingLength(obj))\n    var oldOffset = offset\n    if (!defined(obj.id)) throw new Error(\"id is required\")\n    buf[offset++] = 8\n    enc[0].encode(obj.id, buf, offset)\n    offset += enc[0].encode.bytes\n    if (defined(obj.error)) {\n      buf[offset++] = 18\n      enc[1].encode(obj.error, buf, offset)\n      offset += enc[1].encode.bytes\n    }\n    if (defined(obj.key)) {\n      buf[offset++] = 26\n      enc[2].encode(obj.key, buf, offset)\n      offset += enc[2].encode.bytes\n    }\n    if (defined(obj.value)) {\n      buf[offset++] = 34\n      enc[2].encode(obj.value, buf, offset)\n      offset += enc[2].encode.bytes\n    }\n    encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  function decode (buf, offset, end) {\n    if (!offset) offset = 0\n    if (!end) end = buf.length\n    if (!(end <= buf.length && offset <= buf.length)) throw new Error(\"Decoded message is not valid\")\n    var oldOffset = offset\n    var obj = {\n      id: 0,\n      error: \"\",\n      key: null,\n      value: null\n    }\n    var found0 = false\n    while (true) {\n      if (end <= offset) {\n        if (!found0) throw new Error(\"Decoded message is not valid\")\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n      switch (tag) {\n        case 1:\n        obj.id = enc[0].decode(buf, offset)\n        offset += enc[0].decode.bytes\n        found0 = true\n        break\n        case 2:\n        obj.error = enc[1].decode(buf, offset)\n        offset += enc[1].decode.bytes\n        break\n        case 3:\n        obj.key = enc[2].decode(buf, offset)\n        offset += enc[2].decode.bytes\n        break\n        case 4:\n        obj.value = enc[2].decode(buf, offset)\n        offset += enc[2].decode.bytes\n        break\n        default:\n        offset = skip(prefix & 7, buf, offset)\n      }\n    }\n  }\n}\n\nfunction defined (val) {\n  return val !== null && val !== undefined && (typeof val !== 'number' || !isNaN(val))\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}