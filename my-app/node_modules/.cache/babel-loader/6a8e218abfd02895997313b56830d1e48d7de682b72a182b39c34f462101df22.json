{"ast":null,"code":"'use strict';\n\nconst {\n  numberToMark,\n  markToNumber\n} = require('pinyin-utils');\nconst {\n  split: splitPinyin\n} = require('pinyin-split');\nconst {\n  fromPinyin\n} = require('zhuyin');\nconst {\n  promisify\n} = require('util');\nconst mapClassifiers = classifiers => {\n  classifiers = classifiers.reduce((list, cls) => {\n    return list.concat(cls.substr(3).split(','));\n  }, []);\n  return classifiers.reduce((o, cl) => {\n    const parts = cl.split('[');\n    const characters = parts[0].split('|');\n    const pinyin = parts[1].split(']')[0];\n    o[pinyin] = {\n      traditional: characters[0],\n      simplified: characters[1],\n      pinyin: pinyin.split(' ').map(numberToMark).join(' ')\n    };\n    return o;\n  }, {});\n};\nconst mapDefinitions = defs => {\n  return defs.reduce((o, def) => {\n    const k = def.pinyin;\n    o[k] = def;\n    o[k].pinyin = numberToMark(def.pinyin.split(' ')).join(' ');\n    o[k].zhuyin = fromPinyin(def.pinyin).join(' ');\n    const classifiers = def.translations.filter(eng => eng.substr(0, 3) === 'CL:');\n    o[k].translations = def.translations.filter(eng => !classifiers.includes(eng));\n    if (classifiers.length > 0) def.classifiers = mapClassifiers(classifiers);\n    return o;\n  }, {});\n};\nconst processData = data => {\n  data.simplified = data.simplified || data.traditional;\n  data.definitions = mapDefinitions(data.definitions);\n  return data;\n};\nconst getByHanzi = hanziDB => {\n  const get = (query, split) => new Promise((resolve, reject) => {\n    hanziDB.get(query, async (err, data) => {\n      if (err && err.type == 'NotFoundError' && split) {\n        const list = [];\n        let index = 0;\n        while (index < query.length) {\n          let count = query.length - index;\n          while (count >= 0) {\n            const word = query.substr(index, count);\n            try {\n              const entry = await get(word);\n              index += count - 1;\n              list.push(entry);\n              break;\n            } catch (err) {\n              if (err.type !== 'NotFoundError') console.error(err);\n            }\n            count--;\n          }\n          index++;\n        }\n        resolve(list);\n      } else if (err) reject(err);else resolve(processData(data));\n    });\n  });\n  return get;\n};\nconst getIndexByPinyin = (_, pinyinDB) => query => {\n  const pinyinList = markToNumber(splitPinyin(query));\n  return promisify(pinyinDB.get.bind(pinyinDB))(pinyinList.join(' ').toLowerCase());\n};\nconst getByPinyin = (hanziDB, pinyinDB) => {\n  const byHanzi = getByHanzi(hanziDB);\n  const indexByPinyin = getIndexByPinyin(null, pinyinDB);\n  return query => indexByPinyin(query).then(list => Promise.all(list.map(byHanzi)));\n};\nconst getIndexByZhuyin = (_, pinyinDB) => query => {\n  const indexByPinyin = getIndexByPinyin(null, pinyinDB);\n  return indexByPinyin(zhuyin.toPinyin(query, {\n    numbered: true\n  }));\n};\nconst getByZhuyin = (hanziDB, pinyinDB) => {\n  const byHanzi = getByHanzi(hanziDB);\n  const indexByZhuyin = getIndexByZhuyin(null, pinyinDB);\n  return query => indexByZhuyin(query).then(list => Promise.all(list.map(byHanzi)));\n};\nconst getIndexByHSK = (_, __, hskDB) => query => {\n  return promisify(hskDB.get.bind(hskDB))(query);\n};\nconst getByHSK = (hanziDB, _, hskDB) => {\n  const byHanzi = getByHanzi(hanziDB);\n  const indexByHSK = getIndexByHSK(null, null, hskDB);\n  return query => indexByHSK(query).then(list => Promise.all(list.map(item => byHanzi(item, true))));\n};\nmodule.exports = (hanziDB, pinyinDB) => {\n  const byHanzi = getByHanzi(hanziDB);\n  const byPinyin = getByPinyin(hanziDB, pinyinDB);\n  const byZhuyin = getByZhuyin(hanziDB, pinyinDB);\n  return query => byHanzi(query).catch(err => {\n    if (err.type === 'NotFoundError' && query) {\n      return byPinyin(query);\n    } else {\n      return err;\n    }\n  }).catch(err => {\n    if (err.type === 'NotFoundError' && query) {\n      return byZhuyin(query);\n    } else {\n      return err;\n    }\n  });\n};\nmodule.exports.byHanzi = getByHanzi;\nmodule.exports.byPinyin = getByPinyin;\nmodule.exports.byZhuyin = getByZhuyin;\nmodule.exports.byHSK = getByHSK;\nmodule.exports.indexByPinyin = getIndexByPinyin;\nmodule.exports.indexByZhuyin = getIndexByZhuyin;\nmodule.exports.indexByHSK = getIndexByHSK;","map":{"version":3,"names":["numberToMark","markToNumber","require","split","splitPinyin","fromPinyin","promisify","mapClassifiers","classifiers","reduce","list","cls","concat","substr","o","cl","parts","characters","pinyin","traditional","simplified","map","join","mapDefinitions","defs","def","k","zhuyin","translations","filter","eng","includes","length","processData","data","definitions","getByHanzi","hanziDB","get","query","Promise","resolve","reject","err","type","index","count","word","entry","push","console","error","getIndexByPinyin","_","pinyinDB","pinyinList","bind","toLowerCase","getByPinyin","byHanzi","indexByPinyin","then","all","getIndexByZhuyin","toPinyin","numbered","getByZhuyin","indexByZhuyin","getIndexByHSK","__","hskDB","getByHSK","indexByHSK","item","module","exports","byPinyin","byZhuyin","catch","byHSK"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/mdbg/lib/get.js"],"sourcesContent":["'use strict'\n\nconst { numberToMark, markToNumber } = require('pinyin-utils')\nconst { split: splitPinyin } = require('pinyin-split')\nconst { fromPinyin } = require('zhuyin')\nconst { promisify } = require('util')\n\nconst mapClassifiers = classifiers => {\n  classifiers = classifiers.reduce((list, cls) => {\n    return list.concat(cls.substr(3).split(','))\n  }, [])\n  return classifiers.reduce((o, cl) => {\n    const parts = cl.split('[')\n    const characters = parts[0].split('|')\n    const pinyin = parts[1].split(']')[0]\n    o[pinyin] = {\n      traditional: characters[0],\n      simplified: characters[1],\n      pinyin: pinyin.split(' ').map(numberToMark).join(' ')\n    }\n    return o\n  }, {})\n}\n\nconst mapDefinitions = defs => {\n  return defs.reduce((o, def) => {\n    const k = def.pinyin\n    o[k] = def\n\n    o[k].pinyin = numberToMark(def.pinyin.split(' ')).join(' ')\n    o[k].zhuyin = fromPinyin(def.pinyin).join(' ')\n\n    const classifiers = def.translations.filter(eng => eng.substr(0, 3) === 'CL:')\n    o[k].translations = def.translations.filter(eng => !classifiers.includes(eng))\n    if (classifiers.length > 0) def.classifiers = mapClassifiers(classifiers)\n\n    return o\n  }, {})\n}\n\nconst processData = data => {\n  data.simplified = data.simplified || data.traditional\n  data.definitions = mapDefinitions(data.definitions)\n  return data\n}\n\nconst getByHanzi = hanziDB => {\n  const get = (query, split) => new Promise((resolve, reject) => {\n    hanziDB.get(query, async (err, data) => {\n      if (err && err.type == 'NotFoundError' && split) {\n        const list = []\n        let index = 0\n        while (index < query.length) {\n          let count = query.length - index\n          while (count >= 0) {\n            const word = query.substr(index, count)\n            try {\n              const entry = await get(word)\n              index += count - 1\n              list.push(entry)\n              break\n            } catch (err) {\n              if (err.type !== 'NotFoundError') console.error(err)\n            }\n            count--\n          }\n          index ++\n        }\n        resolve(list)\n      }\n      else if (err) reject(err)\n      else resolve(processData(data))\n    })\n  })\n  return get\n}\n\nconst getIndexByPinyin = (_, pinyinDB) => query => {\n  const pinyinList = markToNumber(splitPinyin(query))\n  return promisify(pinyinDB.get.bind(pinyinDB))(pinyinList.join(' ').toLowerCase())\n}\n\nconst getByPinyin = (hanziDB, pinyinDB) => {\n  const byHanzi = getByHanzi(hanziDB)\n  const indexByPinyin = getIndexByPinyin(null, pinyinDB)\n  return query => indexByPinyin(query)\n  .then(list => Promise.all(list.map(byHanzi)))\n}\n\nconst getIndexByZhuyin = (_, pinyinDB) => query => {\n  const indexByPinyin = getIndexByPinyin(null, pinyinDB)\n  return indexByPinyin(zhuyin.toPinyin(query, { numbered: true }))\n}\n\nconst getByZhuyin = (hanziDB, pinyinDB) => {\n  const byHanzi = getByHanzi(hanziDB)\n  const indexByZhuyin = getIndexByZhuyin(null, pinyinDB)\n  return query => indexByZhuyin(query)\n  .then(list => Promise.all(list.map(byHanzi)))\n}\n\nconst getIndexByHSK = (_, __, hskDB) => query => {\n  return promisify(hskDB.get.bind(hskDB))(query)\n}\n\nconst getByHSK = (hanziDB, _, hskDB) => {\n  const byHanzi = getByHanzi(hanziDB)\n  const indexByHSK = getIndexByHSK(null, null, hskDB)\n  return query => indexByHSK(query)\n  .then(list => Promise.all(list.map(item => byHanzi(item, true))))\n}\n\nmodule.exports = (hanziDB, pinyinDB) => {\n  const byHanzi = getByHanzi(hanziDB)\n  const byPinyin = getByPinyin(hanziDB, pinyinDB)\n  const byZhuyin = getByZhuyin(hanziDB, pinyinDB)\n  return query => byHanzi(query)\n  .catch(err => {\n    if (err.type === 'NotFoundError' && query) {\n      return byPinyin(query)\n    } else {\n      return err\n    }\n  })\n  .catch(err => {\n    if (err.type === 'NotFoundError' && query) {\n      return byZhuyin(query)\n    } else {\n      return err\n    }\n  })\n}\n\nmodule.exports.byHanzi = getByHanzi\nmodule.exports.byPinyin = getByPinyin\nmodule.exports.byZhuyin = getByZhuyin\nmodule.exports.byHSK = getByHSK\nmodule.exports.indexByPinyin = getIndexByPinyin\nmodule.exports.indexByZhuyin = getIndexByZhuyin\nmodule.exports.indexByHSK = getIndexByHSK\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}