{"ast":null,"code":"/* global indexedDB */\n\n'use strict';\n\nmodule.exports = Level;\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\nvar inherits = require('inherits');\nvar Iterator = require('./iterator');\nvar serialize = require('./util/serialize');\nvar deserialize = require('./util/deserialize');\nvar support = require('./util/support');\nvar clear = require('./util/clear');\nvar createKeyRange = require('./util/key-range');\nvar DEFAULT_PREFIX = 'level-js-';\nfunction Level(location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts);\n  AbstractLevelDOWN.call(this, {\n    bufferKeys: support.bufferKeys(indexedDB),\n    snapshots: true,\n    permanence: true,\n    clear: true\n  });\n  opts = opts || {};\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument');\n  }\n  this.location = location;\n  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix;\n  this.version = parseInt(opts.version || 1, 10);\n}\ninherits(Level, AbstractLevelDOWN);\nLevel.prototype.type = 'level-js';\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version);\n  var self = this;\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'));\n  };\n  req.onsuccess = function () {\n    self.db = req.result;\n    callback();\n  };\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location);\n    }\n  };\n};\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode);\n  return transaction.objectStore(this.location);\n};\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction;\n\n  // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'));\n  };\n  transaction.oncomplete = function () {\n    callback(null, request.result);\n  };\n};\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly');\n  try {\n    var req = store.get(key);\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n  this.await(req, function (err, value) {\n    if (err) return callback(err);\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'));\n    }\n    callback(null, deserialize(value, options.asBuffer));\n  });\n};\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite');\n  try {\n    var req = store.delete(key);\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n  this.await(req, callback);\n};\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite');\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key);\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n  this.await(req, callback);\n};\nLevel.prototype._serializeKey = function (key) {\n  return serialize(key, this.supports.bufferKeys);\n};\nLevel.prototype._serializeValue = function (value) {\n  return serialize(value, true);\n};\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this, this.location, options);\n};\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return this._nextTick(callback);\n  var store = this.store('readwrite');\n  var transaction = store.transaction;\n  var index = 0;\n  var error;\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'));\n  };\n  transaction.oncomplete = function () {\n    callback();\n  };\n\n  // Wait for a request to complete before making the next, saving CPU.\n  function loop() {\n    var op = operations[index++];\n    var key = op.key;\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key);\n    } catch (err) {\n      error = err;\n      transaction.abort();\n      return;\n    }\n    if (index < operations.length) {\n      req.onsuccess = loop;\n    }\n  }\n  loop();\n};\nLevel.prototype._clear = function (options, callback) {\n  try {\n    var keyRange = createKeyRange(options);\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just do nothing.\n    return this._nextTick(callback);\n  }\n  if (options.limit >= 0) {\n    // IDBObjectStore#delete(range) doesn't have such an option.\n    // Fall back to cursor-based implementation.\n    return clear(this, this.location, keyRange, options, callback);\n  }\n  try {\n    var store = this.store('readwrite');\n    var req = keyRange ? store.delete(keyRange) : store.clear();\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n  this.await(req, callback);\n};\nLevel.prototype._close = function (callback) {\n  this.db.close();\n  this._nextTick(callback);\n};\n\n// NOTE: remove in a next major release\nLevel.prototype.upgrade = function (callback) {\n  if (this.status !== 'open') {\n    return this._nextTick(callback, new Error('cannot upgrade() before open()'));\n  }\n  var it = this.iterator();\n  var batchOptions = {};\n  var self = this;\n  it._deserializeKey = it._deserializeValue = identity;\n  next();\n  function next(err) {\n    if (err) return finish(err);\n    it.next(each);\n  }\n  function each(err, key, value) {\n    if (err || key === undefined) {\n      return finish(err);\n    }\n    var newKey = self._serializeKey(deserialize(key, true));\n    var newValue = self._serializeValue(deserialize(value, true));\n\n    // To bypass serialization on the old key, use _batch() instead of batch().\n    // NOTE: if we disable snapshotting (#86) this could lead to a loop of\n    // inserting and then iterating those same entries, because the new keys\n    // possibly sort after the old keys.\n    self._batch([{\n      type: 'del',\n      key: key\n    }, {\n      type: 'put',\n      key: newKey,\n      value: newValue\n    }], batchOptions, next);\n  }\n  function finish(err) {\n    it.end(function (err2) {\n      callback(err || err2);\n    });\n  }\n  function identity(data) {\n    return data;\n  }\n};\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix;\n    prefix = DEFAULT_PREFIX;\n  }\n  var request = indexedDB.deleteDatabase(prefix + location);\n  request.onsuccess = function () {\n    callback();\n  };\n  request.onerror = function (err) {\n    callback(err);\n  };\n};","map":{"version":3,"names":["module","exports","Level","AbstractLevelDOWN","require","inherits","Iterator","serialize","deserialize","support","clear","createKeyRange","DEFAULT_PREFIX","location","opts","call","bufferKeys","indexedDB","snapshots","permanence","Error","prefix","version","parseInt","prototype","type","_open","options","callback","req","open","self","onerror","error","onsuccess","db","result","onupgradeneeded","ev","target","objectStoreNames","contains","createObjectStore","store","mode","transaction","objectStore","await","request","onabort","oncomplete","_get","key","get","err","_nextTick","value","undefined","asBuffer","_del","delete","_put","put","_serializeKey","supports","_serializeValue","_iterator","_batch","operations","length","index","loop","op","abort","_clear","keyRange","e","limit","_close","close","upgrade","status","it","iterator","batchOptions","_deserializeKey","_deserializeValue","identity","next","finish","each","newKey","newValue","end","err2","data","destroy","deleteDatabase"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/level-js/index.js"],"sourcesContent":["/* global indexedDB */\n\n'use strict'\n\nmodule.exports = Level\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nvar inherits = require('inherits')\nvar Iterator = require('./iterator')\nvar serialize = require('./util/serialize')\nvar deserialize = require('./util/deserialize')\nvar support = require('./util/support')\nvar clear = require('./util/clear')\nvar createKeyRange = require('./util/key-range')\n\nvar DEFAULT_PREFIX = 'level-js-'\n\nfunction Level (location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts)\n\n  AbstractLevelDOWN.call(this, {\n    bufferKeys: support.bufferKeys(indexedDB),\n    snapshots: true,\n    permanence: true,\n    clear: true\n  })\n\n  opts = opts || {}\n\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument')\n  }\n\n  this.location = location\n  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix\n  this.version = parseInt(opts.version || 1, 10)\n}\n\ninherits(Level, AbstractLevelDOWN)\n\nLevel.prototype.type = 'level-js'\n\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version)\n  var self = this\n\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'))\n  }\n\n  req.onsuccess = function () {\n    self.db = req.result\n    callback()\n  }\n\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result\n\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location)\n    }\n  }\n}\n\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode)\n  return transaction.objectStore(this.location)\n}\n\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction\n\n  // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback(null, request.result)\n  }\n}\n\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly')\n\n  try {\n    var req = store.get(key)\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, function (err, value) {\n    if (err) return callback(err)\n\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'))\n    }\n\n    callback(null, deserialize(value, options.asBuffer))\n  })\n}\n\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    var req = store.delete(key)\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key)\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._serializeKey = function (key) {\n  return serialize(key, this.supports.bufferKeys)\n}\n\nLevel.prototype._serializeValue = function (value) {\n  return serialize(value, true)\n}\n\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this, this.location, options)\n}\n\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return this._nextTick(callback)\n\n  var store = this.store('readwrite')\n  var transaction = store.transaction\n  var index = 0\n  var error\n\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  // Wait for a request to complete before making the next, saving CPU.\n  function loop () {\n    var op = operations[index++]\n    var key = op.key\n\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n    } catch (err) {\n      error = err\n      transaction.abort()\n      return\n    }\n\n    if (index < operations.length) {\n      req.onsuccess = loop\n    }\n  }\n\n  loop()\n}\n\nLevel.prototype._clear = function (options, callback) {\n  try {\n    var keyRange = createKeyRange(options)\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just do nothing.\n    return this._nextTick(callback)\n  }\n\n  if (options.limit >= 0) {\n    // IDBObjectStore#delete(range) doesn't have such an option.\n    // Fall back to cursor-based implementation.\n    return clear(this, this.location, keyRange, options, callback)\n  }\n\n  try {\n    var store = this.store('readwrite')\n    var req = keyRange ? store.delete(keyRange) : store.clear()\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._close = function (callback) {\n  this.db.close()\n  this._nextTick(callback)\n}\n\n// NOTE: remove in a next major release\nLevel.prototype.upgrade = function (callback) {\n  if (this.status !== 'open') {\n    return this._nextTick(callback, new Error('cannot upgrade() before open()'))\n  }\n\n  var it = this.iterator()\n  var batchOptions = {}\n  var self = this\n\n  it._deserializeKey = it._deserializeValue = identity\n  next()\n\n  function next (err) {\n    if (err) return finish(err)\n    it.next(each)\n  }\n\n  function each (err, key, value) {\n    if (err || key === undefined) {\n      return finish(err)\n    }\n\n    var newKey = self._serializeKey(deserialize(key, true))\n    var newValue = self._serializeValue(deserialize(value, true))\n\n    // To bypass serialization on the old key, use _batch() instead of batch().\n    // NOTE: if we disable snapshotting (#86) this could lead to a loop of\n    // inserting and then iterating those same entries, because the new keys\n    // possibly sort after the old keys.\n    self._batch([\n      { type: 'del', key: key },\n      { type: 'put', key: newKey, value: newValue }\n    ], batchOptions, next)\n  }\n\n  function finish (err) {\n    it.end(function (err2) {\n      callback(err || err2)\n    })\n  }\n\n  function identity (data) {\n    return data\n  }\n}\n\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n  var request = indexedDB.deleteDatabase(prefix + location)\n  request.onsuccess = function () {\n    callback()\n  }\n  request.onerror = function (err) {\n    callback(err)\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}