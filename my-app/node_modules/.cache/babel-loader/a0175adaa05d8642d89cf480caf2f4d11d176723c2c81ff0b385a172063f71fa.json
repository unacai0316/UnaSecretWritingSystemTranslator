{"ast":null,"code":"var _jsxFileName = \"/Users/tsaiyunzhen/my-react-app/my-app/src/TranslationEncryption.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport convert from 'hanzi-to-zhuyin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst zhuyin2keyboard = {\n  'ㄅ': '1',\n  'ㄆ': 'q',\n  'ㄇ': 'a',\n  'ㄈ': 'z',\n  'ㄉ': '2',\n  'ㄊ': 'w',\n  'ㄋ': 's',\n  'ㄌ': 'x',\n  'ㄍ': 'e',\n  'ㄎ': 'd',\n  'ㄏ': 'c',\n  'ㄐ': 'r',\n  'ㄑ': 'f',\n  'ㄒ': 'v',\n  'ㄓ': '5',\n  'ㄔ': 't',\n  'ㄕ': 'g',\n  'ㄖ': 'b',\n  'ㄗ': 'y',\n  'ㄘ': 'h',\n  'ㄙ': 'n',\n  'ㄧ': 'u',\n  'ㄨ': 'j',\n  'ㄩ': 'm',\n  'ㄚ': '8',\n  'ㄛ': 'i',\n  'ㄜ': 'k',\n  'ㄝ': ',',\n  'ㄞ': '9',\n  'ㄟ': 'o',\n  'ㄠ': 'l',\n  'ㄡ': '.',\n  'ㄢ': '0',\n  'ㄣ': 'p',\n  'ㄤ': ';',\n  'ㄥ': '/',\n  'ㄦ': '-',\n  'ˊ': '6',\n  'ˇ': '3',\n  'ˋ': '4',\n  '˙': '7'\n};\n\n// 使用 Google Translate API 進行翻譯\nconst translateAPI = async text => {\n  const apiKey = 'YOUR_GOOGLE_TRANSLATE_API_KEY'; // 替換為你的 API 密鑰\n  const url = `https://translation.googleapis.com/language/translate/v2?key=${apiKey}`;\n  try {\n    const response = await axios.post(url, {\n      q: text,\n      target: 'zh',\n      // 目標語言設置為中文\n      format: 'text'\n    });\n    return response.data.data.translations[0].translatedText;\n  } catch (error) {\n    console.error('Error translating text:', error);\n    throw error;\n  }\n};\n\n// 模擬中文到注音的轉換（實際使用時需要一個完整的轉換庫）\nconst chinese2zhuyin = text => {\n  return convert(text); // 使用 hanzi-to-zhuyin 庫進行轉換\n};\nconst zhuyin2keyboard2 = zhuyin => {\n  return zhuyin.split('').map(char => zhuyin2keyboard[char] || char).join('');\n};\nconst TranslationEncryption = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const handleTranslate = async () => {\n    try {\n      const chinese = await translateAPI(input);\n      const zhuyin = chinese2zhuyin(chinese);\n      const encrypted = zhuyin2keyboard2(zhuyin);\n      setResult(`中文：${chinese}\\n注音：${zhuyin}\\n加密：${encrypted}`);\n    } catch (error) {\n      setResult('轉換過程中出現錯誤');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-100 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\u7FFB\\u8B6F\\u52A0\\u5BC6\\u5668\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      className: \"w-full p-2 mb-4 border rounded\",\n      placeholder: \"\\u8F38\\u5165\\u82F1\\u6587\\u55AE\\u8A5E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslate,\n      className: \"bg-blue-500 text-white p-2 rounded hover:bg-blue-600\",\n      children: \"\\u7FFB\\u8B6F\\u4E26\\u52A0\\u5BC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"mt-4 p-2 bg-white rounded\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TranslationEncryption, \"Rn2yf1jfSoSMg1/LTdctDCg0n5U=\");\n_c = TranslationEncryption;\nexport default TranslationEncryption;\nvar _c;\n$RefreshReg$(_c, \"TranslationEncryption\");","map":{"version":3,"names":["React","useState","useEffect","axios","convert","jsxDEV","_jsxDEV","zhuyin2keyboard","translateAPI","text","apiKey","url","response","post","q","target","format","data","translations","translatedText","error","console","chinese2zhuyin","zhuyin2keyboard2","zhuyin","split","map","char","join","TranslationEncryption","_s","input","setInput","result","setResult","handleTranslate","chinese","encrypted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/src/TranslationEncryption.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport convert from 'hanzi-to-zhuyin';\n\nconst zhuyin2keyboard = {\n  'ㄅ': '1', 'ㄆ': 'q', 'ㄇ': 'a', 'ㄈ': 'z',\n  'ㄉ': '2', 'ㄊ': 'w', 'ㄋ': 's', 'ㄌ': 'x',\n  'ㄍ': 'e', 'ㄎ': 'd', 'ㄏ': 'c',\n  'ㄐ': 'r', 'ㄑ': 'f', 'ㄒ': 'v',\n  'ㄓ': '5', 'ㄔ': 't', 'ㄕ': 'g', 'ㄖ': 'b',\n  'ㄗ': 'y', 'ㄘ': 'h', 'ㄙ': 'n',\n  'ㄧ': 'u', 'ㄨ': 'j', 'ㄩ': 'm',\n  'ㄚ': '8', 'ㄛ': 'i', 'ㄜ': 'k', 'ㄝ': ',',\n  'ㄞ': '9', 'ㄟ': 'o', 'ㄠ': 'l', 'ㄡ': '.',\n  'ㄢ': '0', 'ㄣ': 'p', 'ㄤ': ';', 'ㄥ': '/',\n  'ㄦ': '-',\n  'ˊ': '6', 'ˇ': '3', 'ˋ': '4', '˙': '7'\n};\n\n// 使用 Google Translate API 進行翻譯\nconst translateAPI = async (text) => {\n  const apiKey = 'YOUR_GOOGLE_TRANSLATE_API_KEY'; // 替換為你的 API 密鑰\n  const url = `https://translation.googleapis.com/language/translate/v2?key=${apiKey}`;\n\n  try {\n    const response = await axios.post(url, {\n      q: text,\n      target: 'zh', // 目標語言設置為中文\n      format: 'text'\n    });\n    return response.data.data.translations[0].translatedText;\n  } catch (error) {\n    console.error('Error translating text:', error);\n    throw error;\n  }\n};\n\n// 模擬中文到注音的轉換（實際使用時需要一個完整的轉換庫）\nconst chinese2zhuyin = (text) => {\n  return convert(text); // 使用 hanzi-to-zhuyin 庫進行轉換\n};\n\nconst zhuyin2keyboard2 = (zhuyin) => {\n  return zhuyin.split('').map(char => zhuyin2keyboard[char] || char).join('');\n};\n\nconst TranslationEncryption = () => {\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleTranslate = async () => {\n    try {\n      const chinese = await translateAPI(input);\n      const zhuyin = chinese2zhuyin(chinese);\n      const encrypted = zhuyin2keyboard2(zhuyin);\n      setResult(`中文：${chinese}\\n注音：${zhuyin}\\n加密：${encrypted}`);\n    } catch (error) {\n      setResult('轉換過程中出現錯誤');\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-gray-100 rounded-lg\">\n      <h2 className=\"text-2xl font-bold mb-4\">翻譯加密器</h2>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        className=\"w-full p-2 mb-4 border rounded\"\n        placeholder=\"輸入英文單詞\"\n      />\n      <button\n        onClick={handleTranslate}\n        className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\n      >\n        翻譯並加密\n      </button>\n      <pre className=\"mt-4 p-2 bg-white rounded\">{result}</pre>\n    </div>\n  );\n};\n\nexport default TranslationEncryption;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}