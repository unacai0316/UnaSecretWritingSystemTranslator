{"ast":null,"code":"'use strict';\n\nconst getTokens = require('hanzi-tokenizer');\nconst processToken = (token, segmented) => {\n  if (segmented) {\n    return Object.values(token.definitions).map(v => v.zhuyin.replace(/\\s/, ''));\n  } else {\n    return Object.values(token.definitions).map(v => v.zhuyin);\n  }\n};\nconst convert = async (text, opts = {}) => {\n  const tokens = await getTokens(text, Object.assign(opts, {\n    spaces: true\n  }));\n  const list = [];\n  for (let i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'string') {\n      if (typeof list[list.length - 1] === 'string') {\n        list[list.length - 1] += tokens[i];\n      } else {\n        list.push(tokens[i]);\n      }\n    } else {\n      if (Object.keys(tokens[i].definitions).length === 1) {\n        if (typeof list[list.length - 1] === 'string') {\n          list[list.length - 1] += processToken(tokens[i], opts.segmented)[0];\n        } else {\n          list.push(processToken(tokens[i], opts.segmented)[0]);\n        }\n      } else {\n        list.push(processToken(tokens[i], opts.segmented));\n      }\n    }\n  }\n  return list;\n};\nmodule.exports = convert;\nmodule.exports.init = getTokens.init;","map":{"version":3,"names":["getTokens","require","processToken","token","segmented","Object","values","definitions","map","v","zhuyin","replace","convert","text","opts","tokens","assign","spaces","list","i","length","push","keys","module","exports","init"],"sources":["/Users/tsaiyunzhen/my-react-app/my-app/node_modules/hanzi-to-zhuyin/index.js"],"sourcesContent":["'use strict'\n\nconst getTokens = require('hanzi-tokenizer')\n\nconst processToken = (token, segmented) => {\n\tif (segmented) {\n\t\treturn Object.values(token.definitions).map(v => v.zhuyin.replace(/\\s/, ''))\n\t} else {\n\t\treturn Object.values(token.definitions).map(v => v.zhuyin)\n\t}\n}\n\nconst convert = async (text, opts = {}) => {\n\tconst tokens = await getTokens(text, Object.assign(opts, { spaces: true }))\n\tconst list = []\n\tfor (let i = 0; i < tokens.length; i++) {\n\t\tif (typeof tokens[i] === 'string') {\n\t\t\tif (typeof list[list.length - 1] === 'string') {\n\t\t\t\tlist[list.length - 1] += tokens[i]\n\t\t\t} else {\n\t\t\t\tlist.push(tokens[i])\n\t\t\t}\n\t\t} else {\n\t\t\tif (Object.keys(tokens[i].definitions).length === 1) {\n\t\t\t\tif (typeof list[list.length - 1] === 'string') {\n\t\t\t\t\tlist[list.length - 1] += processToken(tokens[i], opts.segmented)[0]\n\t\t\t\t} else {\n\t\t\t\t\tlist.push(processToken(tokens[i], opts.segmented)[0])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlist.push(processToken(tokens[i], opts.segmented))\n\t\t\t}\n\t\t}\n\t}\n\treturn list\n}\n\nmodule.exports = convert\nmodule.exports.init = getTokens.init\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE5C,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;EAC1C,IAAIA,SAAS,EAAE;IACd,OAAOC,MAAM,CAACC,MAAM,CAACH,KAAK,CAACI,WAAW,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EAC7E,CAAC,MAAM;IACN,OAAON,MAAM,CAACC,MAAM,CAACH,KAAK,CAACI,WAAW,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC;EAC3D;AACD,CAAC;AAED,MAAME,OAAO,GAAG,MAAAA,CAAOC,IAAI,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EAC1C,MAAMC,MAAM,GAAG,MAAMf,SAAS,CAACa,IAAI,EAAER,MAAM,CAACW,MAAM,CAACF,IAAI,EAAE;IAAEG,MAAM,EAAE;EAAK,CAAC,CAAC,CAAC;EAC3E,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,IAAI,OAAOJ,MAAM,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;MAClC,IAAI,OAAOD,IAAI,CAACA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC9CF,IAAI,CAACA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,IAAIL,MAAM,CAACI,CAAC,CAAC;MACnC,CAAC,MAAM;QACND,IAAI,CAACG,IAAI,CAACN,MAAM,CAACI,CAAC,CAAC,CAAC;MACrB;IACD,CAAC,MAAM;MACN,IAAId,MAAM,CAACiB,IAAI,CAACP,MAAM,CAACI,CAAC,CAAC,CAACZ,WAAW,CAAC,CAACa,MAAM,KAAK,CAAC,EAAE;QACpD,IAAI,OAAOF,IAAI,CAACA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC9CF,IAAI,CAACA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,IAAIlB,YAAY,CAACa,MAAM,CAACI,CAAC,CAAC,EAAEL,IAAI,CAACV,SAAS,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC,MAAM;UACNc,IAAI,CAACG,IAAI,CAACnB,YAAY,CAACa,MAAM,CAACI,CAAC,CAAC,EAAEL,IAAI,CAACV,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD;MACD,CAAC,MAAM;QACNc,IAAI,CAACG,IAAI,CAACnB,YAAY,CAACa,MAAM,CAACI,CAAC,CAAC,EAAEL,IAAI,CAACV,SAAS,CAAC,CAAC;MACnD;IACD;EACD;EACA,OAAOc,IAAI;AACZ,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGZ,OAAO;AACxBW,MAAM,CAACC,OAAO,CAACC,IAAI,GAAGzB,SAAS,CAACyB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}