'use strict'; // code generated by pbf v3.2.1

// PinyinDefinition ========================================

var PinyinDefinition = exports.PinyinDefinition = {};

PinyinDefinition.read = function (pbf, end) {
    return pbf.readFields(PinyinDefinition._readField, {pinyin: "", translations: []}, end);
};
PinyinDefinition._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.pinyin = pbf.readString();
    else if (tag === 2) obj.translations.push(pbf.readString());
};
PinyinDefinition.write = function (obj, pbf) {
    if (obj.pinyin) pbf.writeStringField(1, obj.pinyin);
    if (obj.translations) for (var i = 0; i < obj.translations.length; i++) pbf.writeStringField(2, obj.translations[i]);
};

// DictEntry ========================================

var DictEntry = exports.DictEntry = {};

DictEntry.read = function (pbf, end) {
    return pbf.readFields(DictEntry._readField, {traditional: "", simplified: "", definitions: [], hsk: 0}, end);
};
DictEntry._readField = function (tag, obj, pbf) {
    if (tag === 10) obj.traditional = pbf.readString();
    else if (tag === 11) obj.simplified = pbf.readString();
    else if (tag === 12) obj.definitions.push(PinyinDefinition.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 13) obj.hsk = pbf.readVarint(true);
};
DictEntry.write = function (obj, pbf) {
    if (obj.traditional) pbf.writeStringField(10, obj.traditional);
    if (obj.simplified) pbf.writeStringField(11, obj.simplified);
    if (obj.definitions) for (var i = 0; i < obj.definitions.length; i++) pbf.writeMessage(12, PinyinDefinition.write, obj.definitions[i]);
    if (obj.hsk) pbf.writeVarintField(13, obj.hsk);
};

// Dict ========================================

var Dict = exports.Dict = {};

Dict.read = function (pbf, end) {
    return pbf.readFields(Dict._readField, {entries: []}, end);
};
Dict._readField = function (tag, obj, pbf) {
    if (tag === 20) obj.entries.push(DictEntry.read(pbf, pbf.readVarint() + pbf.pos));
};
Dict.write = function (obj, pbf) {
    if (obj.entries) for (var i = 0; i < obj.entries.length; i++) pbf.writeMessage(20, DictEntry.write, obj.entries[i]);
};
